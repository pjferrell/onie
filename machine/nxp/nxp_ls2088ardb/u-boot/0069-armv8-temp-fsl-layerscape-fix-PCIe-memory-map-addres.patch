From 4f0150bfc94f97e93147966252889cfea3be341b Mon Sep 17 00:00:00 2001
From: Zhao Qiang <qiang.zhao@nxp.com>
Date: Tue, 7 Feb 2017 15:36:58 +0800
Subject: [PATCH 69/74] armv8: temp: fsl-layerscape: fix PCIe memory map
 address

Signed-off-by: Mingkai Hu <mingkai.hu@nxp.com>
Signed-off-by: Ashish Kumar <Ashish.Kumar@nxp.com>
Integrated-by: Zhao Qiang <qiang.zhao@nxp.com>
---
 arch/arm/include/asm/arch-fsl-layerscape/immap_lsch3.h |  8 ++++----
 drivers/pci/pcie_layerscape.c                          | 12 +++++++++++-
 2 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/arch/arm/include/asm/arch-fsl-layerscape/immap_lsch3.h b/arch/arm/include/asm/arch-fsl-layerscape/immap_lsch3.h
index 2290055..79d4967 100644
--- a/arch/arm/include/asm/arch-fsl-layerscape/immap_lsch3.h
+++ b/arch/arm/include/asm/arch-fsl-layerscape/immap_lsch3.h
@@ -77,10 +77,10 @@
 #define CONFIG_SYS_PCIE2_ADDR			(CONFIG_SYS_IMMR + 0x2500000)
 #define CONFIG_SYS_PCIE3_ADDR			(CONFIG_SYS_IMMR + 0x2600000)
 #define CONFIG_SYS_PCIE4_ADDR			(CONFIG_SYS_IMMR + 0x2700000)
-#define CONFIG_SYS_PCIE1_PHYS_ADDR		0x1000000000ULL
-#define CONFIG_SYS_PCIE2_PHYS_ADDR		0x1200000000ULL
-#define CONFIG_SYS_PCIE3_PHYS_ADDR		0x1400000000ULL
-#define CONFIG_SYS_PCIE4_PHYS_ADDR		0x1600000000ULL
+#define CONFIG_SYS_PCIE1_PHYS_ADDR		0x2000000000ULL
+#define CONFIG_SYS_PCIE2_PHYS_ADDR		0x2800000000ULL
+#define CONFIG_SYS_PCIE3_PHYS_ADDR		0x3000000000ULL
+#define CONFIG_SYS_PCIE4_PHYS_ADDR		0x3800000000ULL
 /* LUT registers */
 #define PCIE_LUT_BASE				0x80000
 #define PCIE_LUT_LCTRL0				0x7F8
diff --git a/drivers/pci/pcie_layerscape.c b/drivers/pci/pcie_layerscape.c
index fa10b64..255e1f3 100644
--- a/drivers/pci/pcie_layerscape.c
+++ b/drivers/pci/pcie_layerscape.c
@@ -157,8 +157,18 @@ static int ls_pcie_link_state(struct ls_pcie *pcie)
 static int ls_pcie_link_state(struct ls_pcie *pcie)
 {
 	u32 state;
+	u32 svr, ver, offset;
+	struct ccsr_gur __iomem *gur = (void *)(CONFIG_SYS_FSL_GUTS_ADDR);
+
+	svr = gur_in32(&gur->svr);
+	ver = SVR_SOC_VER(svr);
+	if ((ver == SVR_LS2088) || (ver == SVR_LS2084)
+	    || (ver == SVR_LS2044) || (ver == SVR_LS2048))
+		offset = 0x407fc;
+	else
+		offset = PCIE_LUT_DBG;
 
-	state = pex_lut_in32(pcie->dbi + PCIE_LUT_BASE + PCIE_LUT_DBG) &
+	state = pex_lut_in32(pcie->dbi + PCIE_LUT_BASE + offset) &
 		LTSSM_STATE_MASK;
 	if (state < LTSSM_PCIE_L0) {
 		debug("....PCIe link error. LTSSM=0x%02x.\n", state);
-- 
2.1.0.27.g96db324

