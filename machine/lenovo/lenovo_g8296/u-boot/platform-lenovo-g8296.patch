diff --git a/arch/powerpc/cpu/mpc85xx/cpu_init.c b/arch/powerpc/cpu/mpc85xx/cpu_init.c
index d1155e8..f93380a 100644
--- a/arch/powerpc/cpu/mpc85xx/cpu_init.c
+++ b/arch/powerpc/cpu/mpc85xx/cpu_init.c
@@ -555,6 +555,7 @@ skip_l2:
 	setup_mp();
 #endif
 
+#if !defined(CONFIG_LENOVO_G8296) /*Lenovo G8296 - causes errors on our board*/
 #ifdef CONFIG_SYS_FSL_ERRATUM_ESDHC13
 	{
 		if (SVR_MAJ(svr) < 3) {
@@ -564,6 +565,7 @@ skip_l2:
 		}
 	}
 #endif
+#endif
 
 #ifdef CONFIG_SYS_LBC_LCRR
 	/*
diff --git a/arch/powerpc/cpu/mpc85xx/fsl_corenet_serdes.c b/arch/powerpc/cpu/mpc85xx/fsl_corenet_serdes.c
index 5495dc5..21274f1 100644
--- a/arch/powerpc/cpu/mpc85xx/fsl_corenet_serdes.c
+++ b/arch/powerpc/cpu/mpc85xx/fsl_corenet_serdes.c
@@ -694,6 +694,10 @@ void fsl_serdes_init(void)
 		idx = serdes_get_lane_idx(lane);
 		lane_prtcl = serdes_get_prtcl(cfg, lane);
 
+#if defined(CONFIG_LENOVO_G8296)
+                clrsetbits_be32(&srds_regs->lane[idx].ttlcr0,0x3f000000,0x03004000);
+#endif
+
 #ifdef DEBUG
 		switch (lane) {
 		case 0:
@@ -826,6 +830,10 @@ void fsl_serdes_init(void)
 	for (idx = 0; idx < SRDS_MAX_BANK; idx++) {
 		bank = idx;
 
+#if defined(CONFIG_LENOVO_G8296)
+                if (bank != 0) continue;
+#endif
+
 #ifdef CONFIG_SYS_P4080_ERRATUM_SERDES8
 		/*
 		 * Change bank init order to 0, 2, 1, so that the third bank's
diff --git a/board/lenovo/lenovo_g8296/Makefile b/board/lenovo/lenovo_g8296/Makefile
new file mode 100644
index 0000000..a1bc666
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/Makefile
@@ -0,0 +1,33 @@
+#
+# Copyright 2014 Lenovo
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+include $(TOPDIR)/config.mk
+
+LIB    = $(obj)lib$(BOARD).o
+
+MINIMAL=
+
+COBJS-y        += lenovo_g8296.o
+COBJS-y        += p4040mez_common.o
+COBJS-y        += p4040mez_ucode.o
+COBJS-y        += law.o
+COBJS-y        += tlb.o
+
+SRCS   := $(SOBJS:.o=.S) $(COBJS-y:.o=.c)
+OBJS   := $(addprefix $(obj),$(COBJS-y))
+SOBJS  := $(addprefix $(obj),$(SOBJS))
+
+$(LIB):	$(obj).depend $(OBJS) $(SOBJS)
+	$(call cmd_link_o_target, $(OBJS))
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff --git a/board/lenovo/lenovo_g8296/law.c b/board/lenovo/lenovo_g8296/law.c
new file mode 100644
index 0000000..39323ca
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/law.c
@@ -0,0 +1,51 @@
+/*
+ * Copyright 2008-2009 Freescale Semiconductor, Inc.
+ *
+ * (C) Copyright 2000
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/fsl_law.h>
+#include <asm/mmu.h>
+
+struct law_entry law_table[] = {
+	SET_LAW(CONFIG_SYS_FLASH_BASE_PHYS, LAW_SIZE_32M, LAW_TRGT_IF_LBC),
+	SET_LAW(CONFIG_SYS_CPLD_BASE_PHYS, LAW_SIZE_64K, LAW_TRGT_IF_LBC),
+	SET_LAW(CONFIG_SYS_NAND_BASE_PHYS, LAW_SIZE_1M, LAW_TRGT_IF_LBC),
+
+        SET_LAW(CONFIG_SYS_PCIE1_MEM_PHYS, LAW_SIZE_512M, LAW_TRGT_IF_PCIE_1),
+        SET_LAW(CONFIG_SYS_PCIE1_IO_PHYS, LAW_SIZE_64K, LAW_TRGT_IF_PCIE_1),
+        //SET_LAW(CONFIG_SYS_PCIE2_MEM_PHYS, LAWAR_SIZE_512M, LAW_TRGT_IF_PCIE_2),
+        //SET_LAW(CONFIG_SYS_PCIE2_IO_PHYS, LAW_SIZE_64K, LAW_TRGT_IF_PCIE_2),
+        //SET_LAW(CONFIG_SYS_PCIE3_MEM_PHYS, LAWAR_SIZE_512M, LAW_TRGT_IF_PCIE_3),
+        //SET_LAW(CONFIG_SYS_PCIE3_IO_PHYS, LAW_SIZE_64K, LAW_TRGT_IF_PCIE_3),
+
+	SET_LAW(CONFIG_SYS_BMAN_MEM_PHYS, LAW_SIZE_2M, LAW_TRGT_IF_BMAN),
+	SET_LAW(CONFIG_SYS_QMAN_MEM_PHYS, LAW_SIZE_2M, LAW_TRGT_IF_QMAN),
+#ifdef CONFIG_SYS_DCSRBAR_PHYS
+        /* Limit DCSR to 32M to access NPC Trace Buffer */
+        SET_LAW(CONFIG_SYS_DCSRBAR_PHYS, LAW_SIZE_32M, LAW_TRGT_IF_DCSR),
+#endif
+
+};
+
+int num_law_entries = ARRAY_SIZE(law_table);
diff --git a/board/lenovo/lenovo_g8296/lenovo_g8296.c b/board/lenovo/lenovo_g8296/lenovo_g8296.c
new file mode 100644
index 0000000..c96dfdb
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/lenovo_g8296.c
@@ -0,0 +1,277 @@
+#include <common.h>
+#include <asm/fsl_law.h>
+#include <asm/mmu.h>
+#include <fm_eth.h>
+#include <netdev.h>
+#include <asm/fsl_pci.h>
+#include <asm/fsl_law.h>
+#include <asm/fsl_serdes.h>
+#include <asm/fsl_portals.h>
+#include <asm/fsl_liodn.h>
+#include <fsl_mdio.h>
+#include <i2c.h>
+#include <post.h>
+
+#include "p4040mez_common.h"
+
+#define QCSP_BARE 0x318c80
+#define QCSP_BAR  0x318c84
+
+/* Used to determine if we should enable the 2nd PCIe and Serdes port or not.
+ * Currently only used on the MDA test card but likely to be on something else
+ * in the future...
+ */
+
+void board_reset(void)
+{
+	out_8((unsigned char *)(CONFIG_SYS_CPLD_BASE_PHYS + 0xc), 0x80);
+}
+
+unsigned long calculate_board_sys_clk(ulong dummy)
+{
+        return 0;
+}
+
+static void fdt_fixup_board_enet(void *fdt)
+{
+
+        fdt_status_disabled_by_alias(fdt, "emi1_slot5");
+        fdt_status_disabled_by_alias(fdt, "emi2_slot5");
+        fdt_status_disabled_by_alias(fdt, "emi2_slot4");
+        fdt_status_disabled_by_alias(fdt, "emi1_slot4");
+        fdt_status_disabled_by_alias(fdt, "emi1_slot3");
+}
+
+void ft_board_setup(void *blob, bd_t *bd)
+{
+        phys_addr_t base;
+        phys_size_t size;
+
+        ft_cpu_setup(blob, bd);
+
+        base = getenv_bootm_low();
+        size = getenv_bootm_size();
+
+        fdt_fixup_memory(blob, (u64)base, (u64)size);
+
+#ifdef CONFIG_PCI
+	FT_FSL_PCI_SETUP;
+#endif
+
+        fdt_fixup_liodn(blob);
+        fdt_fixup_dr_usb(blob, bd);
+
+#ifdef CONFIG_SYS_DPAA_FMAN
+        fdt_fixup_fman_ethernet(blob);
+        fdt_fixup_board_enet(blob);
+#endif
+
+}
+
+#ifdef CONFIG_PCI
+void pci_init_board(void)
+{
+	fsl_pcie_init_board(0);
+}
+#endif
+
+int board_early_init_f(void)
+{
+    unsigned char cpld_strap = 0;
+    volatile fsl_lbc_t *memctl = (void *)(CONFIG_SYS_LBC_ADDR);
+
+#ifdef CONFIG_SYS_P4080_ERRATUM_DDR1
+        void __iomem *p;
+
+        p = (void *)CONFIG_SYS_MPC8xxx_DDR_ADDR + 0xF00;
+        setbits_be32(p, (1 << (31 - 6)) | (1 << (31 - 31)));
+
+#if CONFIG_NUM_DDR_CONTROLLERS == 2
+        p = (void *)CONFIG_SYS_MPC8xxx_DDR2_ADDR + 0xF00;
+        setbits_be32(p, (1 << (31 - 6)) | (1 << (31 - 31)));
+#endif
+#endif
+	/*Mapping depends on board type*/
+        cpld_strap = in_8((unsigned char*)CONFIG_SYS_CPLD_BASE_PHYS) >> 4;
+        if (cpld_strap)
+        {
+            memctl->bank[3].or = CONFIG_SYS_ORX_PRELIM;
+            memctl->bank[3].br = CONFIG_SYS_BRX_PRELIM;
+        } else {
+            memctl->bank[2].or = CONFIG_SYS_ORX_PRELIM;
+            memctl->bank[2].br = CONFIG_SYS_BRX_PRELIM;
+        }
+	out_8((unsigned char *)(CONFIG_SYS_CPLD_BASE_PHYS + 0x8), 0x00);
+
+        return 0;
+}
+
+
+int board_early_init_r(void)
+{
+        const unsigned int flashbase = CONFIG_SYS_FLASH_BASE;
+        const u8 flash_esel = 2;
+        void __iomem *p;
+        struct law_entry law;
+
+#ifdef CONFIG_SYS_P4080_ERRATUM_CPU5
+
+        if (getenv("p4080_erratum_cpu5_workaround_disable") == NULL) {
+                p = (void *)CONFIG_SYS_CCSRBAR + 0x10f00;
+                setbits_be32(p, 1 << (31 - 17));
+
+                p = (void *)CONFIG_SYS_CCSRBAR + 0x11f00;
+                setbits_be32(p, 1 << (31 - 17));
+
+                law = find_law(CONFIG_SYS_DCSRBAR_PHYS);
+                set_law(law.index, CONFIG_SYS_DCSRBAR_PHYS,
+                                LAW_SIZE_1M, LAW_TRGT_IF_DCSR);
+                p = (void *)CONFIG_SYS_DCSRBAR + 0xB0008;
+                clrbits_be32(p, 1 << (31 - 6));
+                set_law(law.index, law.addr, law.size, law.trgt_id);
+
+                puts("Work-around for Erratum CPU5 enabled\n");
+        } else
+                puts("WARNING: RUNNING without Errata CPU5\n");
+#endif
+
+#ifdef CONFIG_SYS_P4080_ERRATUM_USB14
+
+        law = find_law(CONFIG_SYS_DCSRBAR_PHYS);
+        set_law(law.index, CONFIG_SYS_DCSRBAR_PHYS, LAW_SIZE_1M,
+                        LAW_TRGT_IF_DCSR);
+        p = (void *)CONFIG_SYS_DCSRBAR + 0x20520;
+        setbits_be32(p, 3 << (31 - 17));
+        set_law(law.index, law.addr, law.size, law.trgt_id);
+
+        //puts("Work-around for Erratum USB14 enabled\n");
+#endif
+
+
+#ifdef CONFIG_SYS_P4080_ERRATUM_SERDES8
+        law = find_law(CONFIG_SYS_DCSRBAR_PHYS);
+        set_law(law.index, CONFIG_SYS_DCSRBAR_PHYS, LAW_SIZE_1M,
+                        LAW_TRGT_IF_DCSR);
+        p = (void *)CONFIG_SYS_DCSRBAR + 0x20114;
+        //setbits_be32(p, 3 << (31 - 17));
+        set_law(law.index, law.addr, law.size, law.trgt_id);
+
+        //puts("Work-around for Erratum SERDES8 enabled\n");
+#endif
+
+	p = (void *)CONFIG_SYS_LBC_ADDR + 0xD0;
+	setbits_be32(p,0xf);
+
+        /* Flush d-cache and invalidate i-cache of any FLASH data */
+        flush_dcache();
+        invalidate_icache();
+
+        /* invalidate existing TLB entry for flash + promjet */
+        disable_tlb(flash_esel);
+
+        set_tlb(1, flashbase, CONFIG_SYS_FLASH_BASE_PHYS,       /* tlb, epn, rpn */
+                        MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G, /* perms, wimge */
+                        0, flash_esel, BOOKE_PAGESZ_64M, 1);   /* ts, esel, tsize, iprot */
+
+        set_liodns();
+        setup_portals();
+        /* Set the Qman initiator BAR to match the LAW (for DQRR stashing) */
+#ifdef CONFIG_PHYS_64BIT
+        out_be32((volatile u32 *)(CONFIG_SYS_CCSRBAR + QCSP_BARE),
+                (u32)(CONFIG_SYS_QMAN_MEM_PHYS >> 32));
+#endif
+        out_be32((volatile u32 *)(CONFIG_SYS_CCSRBAR + QCSP_BAR),
+                (u32)CONFIG_SYS_QMAN_MEM_PHYS);
+
+        return 0;
+}
+
+extern phys_size_t fixed_sdram (void);
+
+phys_size_t initdram(int board_type)
+{
+        phys_size_t dram_size;
+
+        puts("Initializing....\n");
+
+        dram_size = fixed_sdram();
+        setup_ddr_tlbs(CONFIG_SYS_SDRAM_SIZE);
+
+        puts("    DDR: ");
+        return dram_size;
+}
+
+#if defined(CONFIG_SYS_DRAM_TEST)
+int testdram(void)
+{
+	int flags;
+
+	char *mem = getenv ("memtest");
+	if (!mem)
+		return 0;
+
+	/* Please be extra careful with this. The only reason we can call memory_post_test()
+	 * is because gd info has been setup already.
+	 */
+	if(strcmp(mem, "true")) {
+		flags = 0;
+	}
+	else {
+		printf("\n\nmemtest=true detected ...\n");
+		flags = POST_SLOWTEST;
+	}
+
+	printf("\n############################################# ");
+	printf("\n########     DRAM TEST (%s Mode)   ######## ", (flags & POST_SLOWTEST)?"Slow":"Fast");
+	printf("\n############################################# \n");
+
+#if CONFIG_POST & CONFIG_SYS_POST_MEMORY
+	if (memory_post_test(flags) != 0) {
+		printf("Memory test : FAILED\n");
+		/* returns 0 means "continue" in init_fnc_t, we want to avoid
+		 * hang up and keep continue, even though it doesn't make any
+		 * sense (except fake error is injected in memory.c for testing
+		 * purpose, we don't want it to hang for sure).
+		 */
+		return 0;
+	}
+
+	printf("Memory test : PASSED\n");
+#else
+	printf(" ---- WARNING!!!  Memory test is not implemented ---- ");
+#endif
+	return 0;
+
+}
+#endif
+
+int board_eth_init(bd_t *bis)
+{
+#ifdef CONFIG_FMAN_ENET
+	int i;
+	struct fsl_pq_mdio_info dtsec_mdio_info;
+
+	dtsec_mdio_info.regs =
+		(struct tsec_mii_mng *)CONFIG_SYS_FM1_DTSEC1_MDIO_ADDR;
+	dtsec_mdio_info.name = DEFAULT_FM_MDIO_NAME;
+
+	/* Register the 1G MDIO bus */
+	fsl_pq_mdio_init(bis, &dtsec_mdio_info);
+
+	fm_info_set_phy_address(FM1_DTSEC1, CONFIG_SYS_FM1_DTSEC1_PHY_ADDR);
+
+	fm_info_set_phy_address(FM2_DTSEC1, CONFIG_SYS_FM2_DTSEC1_PHY_ADDR);
+
+	for (i = FM1_DTSEC1; i < FM1_DTSEC1 + CONFIG_SYS_NUM_FM1_DTSEC; i++) {
+		fm_info_set_mdio(i, miiphy_get_dev_by_name(DEFAULT_FM_MDIO_NAME));
+	}
+
+	for (i = FM2_DTSEC1; i < FM2_DTSEC1 + CONFIG_SYS_NUM_FM2_DTSEC; i++) {
+		fm_info_set_mdio(i, miiphy_get_dev_by_name(DEFAULT_FM_MDIO_NAME));
+	}
+
+	cpu_eth_init(bis);
+#endif /* CONFIG_FMAN_ENET */
+
+	return pci_eth_init(bis);
+}
diff --git a/board/lenovo/lenovo_g8296/p4040mez_common.c b/board/lenovo/lenovo_g8296/p4040mez_common.c
new file mode 100644
index 0000000..750d282
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/p4040mez_common.c
@@ -0,0 +1,147 @@
+#include <common.h>
+#include <asm/fsl_law.h>
+#include <asm/mmu.h>
+#include <fm_eth.h>
+#include <netdev.h>
+#include <asm/fsl_portals.h>
+#include <i2c.h>
+
+#include "p4040mez_common.h"
+
+int card_is_a_proto(void){
+        ccsr_gpio_t* gpio_regs;
+        int cfg;
+
+        gpio_regs = (void *)(CONFIG_SYS_MPC85xx_GPIO_ADDR);
+
+        cfg = in_be32(&gpio_regs->gpdat);
+        if((cfg & 0xf0000000) == 0x80000000){
+		return 1;
+	}else{
+		return 0;
+	}
+	return 0;
+}
+
+int checkboard (void)
+{
+        printf ("Board: Lenovo G8296\n");
+
+#ifdef CONFIG_PHYS_64BIT
+        puts("36-bit Addressing\n");
+#endif
+
+        if(card_is_a_proto()){
+                printf("*********************************\n");
+                printf("Warning this is a proto card\n");
+                printf("*********************************\n");
+        }
+        return 0;
+}
+
+phys_size_t fixed_sdram (void)
+{
+        volatile struct ccsr_ddr *ddr = (struct ccsr_ddr*)CONFIG_SYS_MPC8xxx_DDR_ADDR;
+        volatile struct ccsr_ddr *ddr2 = (struct ccsr_ddr*)CONFIG_SYS_MPC8xxx_DDR2_ADDR;
+        uint sdram_cfg;
+
+        ddr->cs0_bnds = CONFIG_SYS_DDR_CS0_BNDS;
+        ddr->cs0_config = CONFIG_SYS_DDR_CS0_CONFIG;
+        ddr->cs1_bnds = CONFIG_SYS_DDR_CS1_BNDS;
+        ddr->cs1_config = CONFIG_SYS_DDR_CS1_CONFIG;
+        ddr->timing_cfg_3 = CONFIG_SYS_DDR_TIMING_3;
+        ddr->timing_cfg_0 = CONFIG_SYS_DDR_TIMING_0;
+        ddr->timing_cfg_1 = CONFIG_SYS_DDR_TIMING_1;
+        ddr->timing_cfg_2 = CONFIG_SYS_DDR_TIMING_2;
+        ddr->sdram_mode = CONFIG_SYS_DDR_MODE_1;
+        ddr->sdram_mode_2 = CONFIG_SYS_DDR_MODE_2;
+        ddr->sdram_md_cntl = CONFIG_SYS_DDR_MODE_CTRL;
+        ddr->sdram_interval = CONFIG_SYS_DDR_INTERVAL;
+        ddr->sdram_data_init = CONFIG_SYS_DDR_DATA_INIT;
+        ddr->sdram_clk_cntl = CONFIG_SYS_DDR_CLK_CTRL;
+        ddr->sdram_cfg_2 = CONFIG_SYS_DDR_CONTROL2;
+        ddr->ddr_zq_cntl = CONFIG_SYS_DDR_ZQ_CNTL;
+        ddr->ddr_wrlvl_cntl = CONFIG_SYS_DDR_WRLVL_CNTL;
+        ddr->ddr_cdr1 = CONFIG_SYS_DDR_CDR1;
+        ddr->timing_cfg_4 = CONFIG_SYS_DDR_TIMING_4;
+        ddr->timing_cfg_5 = CONFIG_SYS_DDR_TIMING_5;
+        ddr->debug[18-1] = CONFIG_SYS_DDR_DEBUG_18;
+        ddr->ddr_cdr1 = CONFIG_SYS_DDR_DDRCDR_1;
+        ddr->ddr_cdr2 = CONFIG_SYS_DDR_DDRCDR_2;
+
+        ddr2->cs0_bnds = CONFIG_SYS_DDR2_CS0_BNDS;
+        ddr2->cs0_config = CONFIG_SYS_DDR2_CS0_CONFIG;
+        ddr2->cs1_bnds = CONFIG_SYS_DDR2_CS1_BNDS;
+        ddr2->cs1_config = CONFIG_SYS_DDR2_CS1_CONFIG;
+        ddr2->timing_cfg_3 = CONFIG_SYS_DDR2_TIMING_3;
+        ddr2->timing_cfg_0 = CONFIG_SYS_DDR2_TIMING_0;
+        ddr2->timing_cfg_1 = CONFIG_SYS_DDR2_TIMING_1;
+        ddr2->timing_cfg_2 = CONFIG_SYS_DDR2_TIMING_2;
+        ddr2->sdram_mode = CONFIG_SYS_DDR2_MODE_1;
+        ddr2->sdram_mode_2 = CONFIG_SYS_DDR2_MODE_2;
+        ddr2->sdram_md_cntl = CONFIG_SYS_DDR2_MODE_CTRL;
+        ddr2->sdram_interval = CONFIG_SYS_DDR2_INTERVAL;
+        ddr2->sdram_data_init = CONFIG_SYS_DDR2_DATA_INIT;
+        ddr2->sdram_clk_cntl = CONFIG_SYS_DDR2_CLK_CTRL;
+        ddr2->sdram_cfg_2 = CONFIG_SYS_DDR2_CONTROL2;
+        ddr2->ddr_zq_cntl = CONFIG_SYS_DDR2_ZQ_CNTL;
+        ddr2->ddr_wrlvl_cntl = CONFIG_SYS_DDR2_WRLVL_CNTL;
+        ddr2->ddr_cdr1 = CONFIG_SYS_DDR2_CDR1;
+        ddr2->timing_cfg_4 = CONFIG_SYS_DDR2_TIMING_4;
+        ddr2->timing_cfg_5 = CONFIG_SYS_DDR2_TIMING_5;
+        ddr2->debug[18-1] = CONFIG_SYS_DDR2_DEBUG_18;
+        ddr2->ddr_cdr1 = CONFIG_SYS_DDR2_DDRCDR_1;
+        ddr2->ddr_cdr2 = CONFIG_SYS_DDR2_DDRCDR_2;
+
+#ifdef CONFIG_DDR_ECC
+        /* ECC will be assumed in stable mode */
+        ddr->err_int_en = CONFIG_SYS_DDR_ERR_INT_EN;
+        ddr->err_disable = CONFIG_SYS_DDR_ERR_DIS;
+        ddr->err_sbe = CONFIG_SYS_DDR_SBE;
+        ddr2->err_int_en = CONFIG_SYS_DDR2_ERR_INT_EN;
+        ddr2->err_disable = CONFIG_SYS_DDR2_ERR_DIS;
+        ddr2->err_sbe = CONFIG_SYS_DDR2_SBE;
+        sdram_cfg = CONFIG_SYS_DDR_CONTROL | 0x20000000;
+#else
+        sdram_cfg = CONFIG_SYS_DDR_CONTROL;
+#endif
+
+        asm("sync;isync");
+        udelay(500);
+
+        ddr->debug[13-1] = 0x00000015;
+        out_be32((volatile u32 *)(CONFIG_SYS_MPC8xxx_DDR_ADDR + 0xf54),0x24000000);
+        ddr->sdram_cfg = sdram_cfg;
+        ddr2->debug[13-1] = 0x00000015;
+        out_be32((volatile u32 *)(CONFIG_SYS_MPC8xxx_DDR2_ADDR + 0xf54),0x24000000);
+        ddr2->sdram_cfg = sdram_cfg;
+
+#ifdef CONFIG_ECC_INIT_VIA_DDRCONTROLLER
+        /*
+         *          * Poll until memory is initialized.  512 Meg at 400MHz might hit this
+         *                   * 200 times or so.
+         *                            */
+        while ((ddr->sdram_cfg_2 & 16) != 0) {
+               debug("sdram_cfg2 = 0x%08x\n", ddr->sdram_cfg_2);
+               udelay(1000);
+        }
+        asm("sync; isync");
+        udelay(500);
+
+        while ((ddr2->sdram_cfg_2 & 16) != 0) {
+               debug("sdram_cfg2 = 0x%08x\n", ddr2->sdram_cfg_2);
+               udelay(1000);
+        }
+        asm("sync; isync");
+        udelay(500);
+#endif
+
+        /* We assume that CONFIG_SYS_SDRAM_SIZE == 4096, because there's
+         *          * no easy way to map CONFIG_SYS_SDRAM_SIZE to enum law_size.
+         *                   */
+        set_last_law(0, LAW_SIZE_2G, LAW_TRGT_IF_DDR_1);
+        set_last_law(2048*1024*1024UL, LAW_SIZE_2G, LAW_TRGT_IF_DDR_2);
+
+        //return min(CONFIG_SYS_SDRAM_SIZE * 0x100000ull, CONFIG_MAX_MEM_MAPPED);
+        return CONFIG_SYS_SDRAM_SIZE * 0x100000ull;
+}
diff --git a/board/lenovo/lenovo_g8296/p4040mez_common.h b/board/lenovo/lenovo_g8296/p4040mez_common.h
new file mode 100644
index 0000000..5801e5d
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/p4040mez_common.h
@@ -0,0 +1,68 @@
+#ifndef __P4040MEZ_COMMON_H__
+#define __P4040MEZ_COMMON_H__
+
+#define RCW_FLASH_ADDRESS 0xee000000
+#define RCW_DDR_FREQ_1200 (1200*1000*1000)
+#define RCW_DDR_FREQ_1300 (1300*1000*1000)
+
+
+#define CONFIG_SYS_DDR_CS0_BNDS         0x0000007f
+#define CONFIG_SYS_DDR_CS1_BNDS         0x00000000
+#define CONFIG_SYS_DDR_CS0_CONFIG       0x80014302
+#define CONFIG_SYS_DDR_CS1_CONFIG       0x00000000
+#define CONFIG_SYS_DDR_TIMING_3         0x01061000
+#define CONFIG_SYS_DDR_TIMING_0         0xff440104
+#define CONFIG_SYS_DDR_TIMING_1         0x98910a55
+#define CONFIG_SYS_DDR_TIMING_2         0x0fb8b114
+#define CONFIG_SYS_DDR_MODE_1           0x00061a50
+#define CONFIG_SYS_DDR_MODE_2           0x8010c000
+#define CONFIG_SYS_DDR_MODE_CTRL        0x00000000
+#define CONFIG_SYS_DDR_INTERVAL         0x09E50400
+#define CONFIG_SYS_DDR_DATA_INIT        0xdeadbeef
+#define CONFIG_SYS_DDR_CLK_CTRL         0x02800000
+#define CONFIG_SYS_DDR_TIMING_4         0x00000001
+#define CONFIG_SYS_DDR_TIMING_5         0x00001400
+#define CONFIG_SYS_DDR_ZQ_CNTL          0x89080600
+#define CONFIG_SYS_DDR_WRLVL_CNTL       0x8655f608
+#define CONFIG_SYS_DDR_CONTROL          0xc7040000
+#define CONFIG_SYS_DDR_CONTROL2         0x24401010
+#define CONFIG_SYS_DDR_CDR1             0x00000000
+#define CONFIG_SYS_DDR_CDR2             0x00000000
+#define CONFIG_SYS_DDR_ERR_INT_EN       0x0000000d
+#define CONFIG_SYS_DDR_ERR_DIS          0x00000000
+#define CONFIG_SYS_DDR_SBE              0x00010000
+#define CONFIG_SYS_DDR_DEBUG_18         0x40100400
+#define CONFIG_SYS_DDR_DDRCDR_1         0x80000000
+#define CONFIG_SYS_DDR_DDRCDR_2         0x00000000
+
+#define CONFIG_SYS_DDR2_CS0_BNDS        0x008000ff
+#define CONFIG_SYS_DDR2_CS1_BNDS        0x00000000
+#define CONFIG_SYS_DDR2_CS0_CONFIG      CONFIG_SYS_DDR_CS0_CONFIG
+#define CONFIG_SYS_DDR2_CS1_CONFIG      CONFIG_SYS_DDR_CS1_CONFIG
+#define CONFIG_SYS_DDR2_TIMING_3        CONFIG_SYS_DDR_TIMING_3
+#define CONFIG_SYS_DDR2_TIMING_0        CONFIG_SYS_DDR_TIMING_0
+#define CONFIG_SYS_DDR2_TIMING_1        CONFIG_SYS_DDR_TIMING_1
+#define CONFIG_SYS_DDR2_TIMING_2        CONFIG_SYS_DDR_TIMING_2
+#define CONFIG_SYS_DDR2_MODE_1          CONFIG_SYS_DDR_MODE_1
+#define CONFIG_SYS_DDR2_MODE_2          CONFIG_SYS_DDR_MODE_2
+#define CONFIG_SYS_DDR2_MODE_CTRL       CONFIG_SYS_DDR_MODE_CTRL
+#define CONFIG_SYS_DDR2_INTERVAL        CONFIG_SYS_DDR_INTERVAL
+#define CONFIG_SYS_DDR2_DATA_INIT       CONFIG_SYS_DDR_DATA_INIT
+#define CONFIG_SYS_DDR2_CLK_CTRL        CONFIG_SYS_DDR_CLK_CTRL
+#define CONFIG_SYS_DDR2_TIMING_4        CONFIG_SYS_DDR_TIMING_4
+#define CONFIG_SYS_DDR2_TIMING_5        CONFIG_SYS_DDR_TIMING_5
+#define CONFIG_SYS_DDR2_ZQ_CNTL         CONFIG_SYS_DDR_ZQ_CNTL
+#define CONFIG_SYS_DDR2_WRLVL_CNTL      CONFIG_SYS_DDR_WRLVL_CNTL
+#define CONFIG_SYS_DDR2_CONTROL         CONFIG_SYS_DDR_CONTROL
+#define CONFIG_SYS_DDR2_CONTROL2        CONFIG_SYS_DDR_CONTROL2
+#define CONFIG_SYS_DDR2_CDR1            CONFIG_SYS_DDR_CDR1
+#define CONFIG_SYS_DDR2_CDR2            CONFIG_SYS_DDR_CDR2
+#define CONFIG_SYS_DDR2_ERR_INT_EN      CONFIG_SYS_DDR_ERR_INT_EN
+#define CONFIG_SYS_DDR2_ERR_DIS         CONFIG_SYS_DDR_ERR_DIS
+#define CONFIG_SYS_DDR2_SBE             CONFIG_SYS_DDR_SBE
+#define CONFIG_SYS_DDR2_DEBUG_18        CONFIG_SYS_DDR_DEBUG_18
+#define CONFIG_SYS_DDR2_DDRCDR_1        CONFIG_SYS_DDR_DDRCDR_1
+#define CONFIG_SYS_DDR2_DDRCDR_2        CONFIG_SYS_DDR_DDRCDR_2
+
+
+#endif /* __P4040MEZ_COMMON_H__ */
diff --git a/board/lenovo/lenovo_g8296/p4040mez_ucode.c b/board/lenovo/lenovo_g8296/p4040mez_ucode.c
new file mode 100644
index 0000000..dafcf5b
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/p4040mez_ucode.c
@@ -0,0 +1,909 @@
+unsigned char ucode_array[] = {
+0x0,	0x0,	0x1c,	0x48,	0x51,	0x45,	0x46,	0x1,
+0x4d,	0x69,	0x63,	0x72,	0x6f,	0x63,	0x6f,	0x64,
+0x65,	0x20,	0x76,	0x65,	0x72,	0x73,	0x69,	0x6f,
+0x6e,	0x20,	0x31,	0x30,	0x31,	0x2e,	0x38,	0x2e,
+0x30,	0x20,	0x66,	0x6f,	0x72,	0x20,	0x50,	0x34,
+0x30,	0x38,	0x30,	0x20,	0x72,	0x32,	0x2e,	0x30,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x1,
+0xf,	0xf0,	0x2,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x4d,	0x69,	0x63,	0x72,
+0x6f,	0x63,	0x6f,	0x64,	0x65,	0x20,	0x66,	0x6f,
+0x72,	0x20,	0x50,	0x34,	0x30,	0x38,	0x30,	0x20,
+0x72,	0x32,	0x2e,	0x30,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x20,	0x80,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0x0,	0x0,	0x6,	0xd4,
+0x0,	0x0,	0x0,	0xf4,	0x65,	0x8,	0x0,	0x0,
+0x0,	0x0,	0x0,	0x0,	0xb7,	0xff,	0x0,	0xe,
+0x0,	0x65,	0x0,	0x8,	0xb7,	0xff,	0x0,	0x21,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x0,	0x1f,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x0,	0x3a,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x3,	0xb7,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x2,	0xf3,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x6,	0x21,
+0xff,	0xff,	0xff,	0xff,	0x79,	0x2,	0xf8,	0x0,
+0x79,	0x4,	0xf8,	0x0,	0x79,	0x6,	0xf8,	0x0,
+0x79,	0x8,	0xf8,	0x0,	0x79,	0xa,	0xf8,	0x0,
+0x79,	0xc,	0xf8,	0x0,	0x79,	0xe,	0xf8,	0x0,
+0x79,	0x10,	0xf8,	0x0,	0x79,	0x12,	0xf8,	0x0,
+0x79,	0x14,	0xf8,	0x0,	0x79,	0x16,	0xf8,	0x0,
+0x79,	0x18,	0xf8,	0x0,	0x79,	0x1a,	0xf8,	0x0,
+0x79,	0x1c,	0xf8,	0x0,	0x79,	0x1e,	0xf8,	0x0,
+0x77,	0x7f,	0xf8,	0x2,	0x77,	0x7f,	0xf8,	0x3,
+0x77,	0x7f,	0xf8,	0x4,	0x77,	0x7f,	0xf8,	0x6,
+0xb2,	0x1f,	0x0,	0x4,	0x79,	0x0,	0xf8,	0x0,
+0x28,	0x1f,	0xf8,	0x0,	0xff,	0xff,	0xff,	0xff,
+0xb3,	0xff,	0x6,	0x98,	0xc2,	0x0,	0x0,	0x1,
+0x78,	0x0,	0xf9,	0x0,	0xbc,	0x0,	0xff,	0xff,
+0xdb,	0xc0,	0xc0,	0xbd,	0xc6,	0xc,	0x30,	0x78,
+0x77,	0x7e,	0xf3,	0x0,	0x78,	0x9,	0xfb,	0x0,
+0xc8,	0x2,	0x4a,	0x70,	0x73,	0x69,	0xf3,	0x0,
+0x77,	0x0,	0x0,	0x1,	0xc6,	0xc,	0x30,	0x0,
+0xe9,	0xc2,	0x2,	0x3,	0x73,	0x62,	0xf3,	0x0,
+0x77,	0x7e,	0xf3,	0x0,	0x78,	0x0,	0xfb,	0x0,
+0x2e,	0x1f,	0x0,	0x2,	0xff,	0xff,	0xff,	0xff,
+0xeb,	0xc0,	0x0,	0x1,	0x70,	0xe0,	0x1,	0x1,
+0x2e,	0x3f,	0x0,	0x2,	0xff,	0xff,	0xff,	0xff,
+0xc6,	0xc,	0x30,	0x74,	0xe3,	0xc2,	0x0,	0x80,
+0x73,	0x62,	0xf3,	0x0,	0x2e,	0x1f,	0xff,	0xf9,
+0xff,	0xff,	0xff,	0xff,	0x4,	0x0,	0xd0,	0x18,
+0x6,	0x14,	0xd0,	0x30,	0x6,	0x16,	0xd0,	0x38,
+0x6,	0x4,	0x0,	0x8,	0x6,	0x18,	0x0,	0x0,
+0xdb,	0xc4,	0x11,	0xbd,	0xbc,	0x38,	0x0,	0x6,
+0x93,	0xe6,	0x0,	0x11,	0xb4,	0x18,	0x0,	0x1,
+0x6,	0x4,	0xc0,	0x8,	0xb3,	0xff,	0xff,	0xfb,
+0x6,	0x18,	0xc0,	0x0,	0xbc,	0x18,	0x0,	0x8,
+0x6,	0x10,	0xd0,	0x10,	0xb4,	0x58,	0x0,	0x2,
+0xfb,	0x11,	0x24,	0x0,	0x2c,	0x3f,	0x20,	0x0,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0x16,	0x18,	0xd0,	0x10,
+0x2c,	0x38,	0x20,	0x0,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x14,	0xe0,	0x0,
+0x6,	0x8,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4d,	0x48,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x80,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x14,	0xe0,	0x0,
+0x6,	0x8,	0xe0,	0x6,	0x73,	0xf8,	0xc4,	0x20,
+0x4d,	0x48,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x78,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x15,	0xe0,	0x0,
+0x4,	0x8,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x48,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x70,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x15,	0xe4,	0x0,
+0x4,	0x4,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0x44,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x68,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x15,	0xe6,	0x0,
+0x4,	0x4,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0x44,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x60,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0x6,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x48,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x58,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe4,	0x0,
+0x4,	0x4,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0xc4,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x50,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe6,	0x0,
+0x4,	0x4,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0xc4,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x48,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x4,	0x8,	0xe0,	0x10,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x40,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x4,	0x4,	0xe0,	0x1,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0x4,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x38,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x4,	0x8,	0xe0,	0x9,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x30,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x4,	0x8,	0xe0,	0xc,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x28,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x6,	0x8,	0xe0,	0xc,	0x73,	0xf8,	0xc4,	0x20,
+0x4d,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x20,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x4,	0x4,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0xc4,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x18,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x4,	0x8,	0xe0,	0x6,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x10,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0xeb,	0xc4,	0x0,	0xf,	0xf0,	0x5c,	0x43,	0x18,
+0xf8,	0x4,	0x46,	0x30,	0x73,	0xf8,	0xc4,	0x20,
+0x48,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x1,	0x6,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0xeb,	0xc4,	0x0,	0xf,	0xf0,	0x5c,	0x43,	0x8,
+0xf8,	0x4,	0x46,	0x30,	0x73,	0xf8,	0xc4,	0x20,
+0x48,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xfe,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe4,	0x0,
+0x4,	0x8,	0xe0,	0x2,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x48,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xf8,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xf0,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0x4,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xe8,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0x8,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xe0,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x6,	0x8,	0xe0,	0x4,	0x73,	0xf8,	0xc4,	0x20,
+0x4d,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xd8,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0x10,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xd0,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x4,	0xe0,	0x1,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0x4,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xc8,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0x9,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xc0,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0xc,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xb8,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x6,	0x8,	0xe0,	0xc,	0x73,	0xf8,	0xc4,	0x20,
+0x4d,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xb0,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x4,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4e,	0xc4,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xa8,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0x4,	0x8,	0xe0,	0x6,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0xa0,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0xeb,	0xc4,	0x0,	0xf,	0xf0,	0x5c,	0x43,	0x18,
+0xf8,	0x4,	0x46,	0x30,	0x73,	0xf8,	0xc4,	0x20,
+0x48,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x96,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe2,	0x0,
+0xeb,	0xc4,	0x0,	0xf,	0xf0,	0x5c,	0x43,	0x8,
+0xf8,	0x4,	0x46,	0x30,	0x73,	0xf8,	0xc4,	0x20,
+0x48,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x8e,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe6,	0x0,
+0x4,	0x8,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x48,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x88,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe6,	0x0,
+0x4,	0x8,	0xe0,	0x2,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0x48,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x80,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x17,	0xe6,	0x0,
+0x4,	0x8,	0xe0,	0x0,	0x73,	0xf8,	0xc4,	0x20,
+0x4c,	0xc8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x78,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xe5,	0x5c,	0xff,	0x0,
+0xfb,	0x14,	0xe2,	0x0,	0xc8,	0x58,	0xe2,	0x30,
+0x73,	0xf8,	0xc4,	0x20,	0x48,	0x8,	0xc8,	0x0,
+0x2e,	0x5f,	0x0,	0x6f,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xe5,	0x5c,	0xff,	0x0,
+0xfb,	0x14,	0xe4,	0x0,	0xc8,	0x58,	0xe2,	0x30,
+0x73,	0xf8,	0xc4,	0x20,	0x48,	0x8,	0xc8,	0x0,
+0x2e,	0x5f,	0x0,	0x67,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xe5,	0x5c,	0xff,	0x0,
+0xfb,	0x14,	0xe6,	0x0,	0xc8,	0x58,	0xe2,	0x30,
+0x73,	0xf8,	0xc4,	0x20,	0x48,	0x8,	0xc8,	0x0,
+0x2e,	0x5f,	0x0,	0x5f,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xcf,	0x64,	0x43,	0xc1,
+0xd8,	0x4f,	0xd3,	0xf8,	0x73,	0xe5,	0x2c,	0x14,
+0x0,	0x8,	0x78,	0x20,	0xfb,	0x4,	0xe4,	0x3c,
+0xd8,	0x48,	0xe2,	0x78,	0xb3,	0xff,	0x0,	0x42,
+0xc8,	0x58,	0x4a,	0x30,	0xcf,	0x64,	0x43,	0xc1,
+0xd8,	0x4f,	0xd3,	0xf8,	0x73,	0xe5,	0x2c,	0x14,
+0x0,	0x8,	0x78,	0x20,	0xb3,	0xff,	0x0,	0x40,
+0xcb,	0x8,	0xe2,	0x7c,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x4,	0xe4,	0x3c,
+0xc8,	0x58,	0xe2,	0x30,	0x73,	0xf8,	0xc4,	0x20,
+0x48,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x48,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x4,	0xe4,	0x3c,
+0x73,	0xe5,	0x2c,	0x14,	0xc8,	0x58,	0xe2,	0x30,
+0x73,	0xf8,	0xc4,	0x20,	0x48,	0x8,	0xc8,	0x0,
+0x2e,	0x5f,	0x0,	0x3f,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x0,	0x4,	0xe0,	0x8,	0xeb,	0xcb,	0x0,	0x10,
+0xec,	0x24,	0x0,	0x1,	0xd0,	0x78,	0x58,	0x3,
+0xb3,	0xff,	0xfe,	0x9f,	0x6,	0x4,	0x0,	0x8,
+0xff,	0xff,	0xff,	0xff,	0xfb,	0x16,	0xe0,	0x0,
+0x0,	0x4,	0xe0,	0x7,	0xeb,	0xcb,	0x0,	0x10,
+0xec,	0x24,	0x0,	0x1,	0xd0,	0x78,	0x58,	0x3,
+0xb3,	0xff,	0xfe,	0x97,	0x6,	0x4,	0x0,	0x8,
+0xff,	0xff,	0xff,	0xff,	0xd9,	0xdf,	0xd2,	0xf8,
+0xfb,	0x4,	0x5c,	0x3c,	0x73,	0xe5,	0x2c,	0x14,
+0xc8,	0x58,	0x5a,	0x30,	0x73,	0xf8,	0xc4,	0x20,
+0x48,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x26,
+0xff,	0xff,	0xff,	0xff,	0xd9,	0xdf,	0xd2,	0xf8,
+0xfb,	0x4,	0x5c,	0x0,	0x2,	0x0,	0x58,	0x0,
+0xd9,	0x40,	0x28,	0x38,	0xb3,	0xff,	0x0,	0x20,
+0xd8,	0x58,	0x0,	0x38,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xd9,	0xdf,	0xd2,	0xf8,
+0xfb,	0x4,	0x5c,	0x3c,	0xc8,	0x58,	0x5a,	0x30,
+0x73,	0xf8,	0xc4,	0x20,	0x48,	0x8,	0xc8,	0x0,
+0xd9,	0xdf,	0x4,	0xf8,	0x2e,	0x5f,	0x0,	0x11,
+0xff,	0xff,	0xff,	0xff,	0x73,	0xf8,	0xc4,	0x20,
+0x48,	0x8,	0xc8,	0x0,	0x2e,	0x5f,	0x0,	0x12,
+0xff,	0xff,	0xff,	0xff,	0xc8,	0x58,	0x4a,	0x30,
+0x73,	0xf8,	0xc4,	0x20,	0x48,	0x8,	0xc8,	0x0,
+0x2e,	0x5f,	0x0,	0xd,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,	0xff,
+0x78,	0x9,	0xfc,	0x10,	0x4,	0x99,	0x98,	0xc,
+0xb7,	0xdf,	0xff,	0xff,	0xdf,	0x59,	0x4e,	0x78,
+0x14,	0x99,	0x98,	0xc,	0x6,	0x4,	0x0,	0x8,
+0x6,	0x18,	0x0,	0x0,	0xdb,	0xc4,	0x11,	0xbd,
+0xbc,	0x38,	0xfe,	0x6d,	0x93,	0xe6,	0xfe,	0x78,
+0xb4,	0x18,	0xfe,	0x68,	0x2,	0x3,	0x8,	0xd8,
+0x2,	0x4,	0x0,	0xc,	0xeb,	0xc2,	0x0,	0x1,
+0xf4,	0x43,	0x3,	0x1,	0xdb,	0xc0,	0x20,	0xd4,
+0xf4,	0x44,	0x3,	0x8,	0xdb,	0xc2,	0x0,	0x3c,
+0xf0,	0x43,	0x1b,	0x1,	0x12,	0x0,	0x8,	0xda,
+0xca,	0x3,	0xf8,	0x0,	0x9f,	0xff,	0xf4,	0x0,
+0x2,	0x6,	0x10,	0xd2,	0x2,	0x87,	0x8,	0x0,
+0xb7,	0xdf,	0xff,	0xff,	0x2,	0x5,	0x0,	0xa,
+0x2,	0x4,	0x0,	0xc,	0xdc,	0x25,	0x21,	0x78,
+0xb4,	0x1f,	0x0,	0x7,	0x2,	0x3,	0x0,	0x8,
+0xdc,	0x43,	0x28,	0xf8,	0xd8,	0x44,	0x18,	0xf8,
+0xdb,	0xc3,	0x20,	0xd5,	0xb3,	0xff,	0x0,	0x5,
+0xca,	0x3,	0xf8,	0xc0,	0xdc,	0x44,	0x28,	0xf8,
+0xdb,	0xc3,	0x20,	0xd5,	0xca,	0x3,	0xf8,	0xc0,
+0xdc,	0x26,	0x19,	0xb8,	0xbc,	0x1f,	0x0,	0x5,
+0x2,	0x1,	0x0,	0xa,	0xeb,	0xc0,	0x0,	0x0,
+0xb3,	0xff,	0x0,	0x4,	0x12,	0x1,	0x10,	0xd0,
+0x12,	0x87,	0x8,	0x0,	0xeb,	0xc0,	0x0,	0x1,
+0x9f,	0xff,	0xf4,	0x0,	0x2,	0x2,	0x0,	0xa,
+0xdb,	0xc1,	0x20,	0x7d,	0xca,	0x1,	0xf8,	0xc0,
+0x2,	0x0,	0x0,	0x8,	0xd8,	0x42,	0x18,	0x78,
+0xdc,	0x21,	0x0,	0x78,	0xb5,	0x7f,	0x0,	0x9,
+0xdc,	0x20,	0x8,	0x38,	0xbc,	0x3f,	0x0,	0x3,
+0xb3,	0xff,	0x0,	0x5,	0xeb,	0xc0,	0x0,	0x0,
+0xdc,	0x40,	0x10,	0x38,	0xdc,	0x43,	0x0,	0x38,
+0xca,	0x0,	0xf8,	0x0,	0xb7,	0xff,	0x0,	0x2,
+0xca,	0x1,	0xf8,	0x0,	0x9f,	0xff,	0xf4,	0x0,
+0xeb,	0xc3,	0x0,	0xc0,	0xe1,	0xc3,	0x0,	0x50,
+0x2,	0x82,	0x8,	0xe,	0xb7,	0xdf,	0xff,	0xff,
+0xf0,	0x42,	0x13,	0x1,	0xca,	0x2,	0xf8,	0x80,
+0x12,	0x82,	0x8,	0xe,	0x2,	0x1,	0x0,	0x0,
+0xbf,	0x81,	0x0,	0x7,	0xeb,	0xc0,	0x30,	0x20,
+0xcf,	0x81,	0x10,	0x45,	0xe1,	0xc0,	0x0,	0xc,
+0xd8,	0x41,	0x0,	0x78,	0xe3,	0xc0,	0x40,	0x0,
+0x73,	0x60,	0xb,	0x0,	0x2c,	0x3f,	0x18,	0x0,
+0xff,	0xff,	0xff,	0xff,	0x2,	0x6,	0x0,	0xd2,
+0xeb,	0xc3,	0x0,	0x4,	0xdc,	0x23,	0x30,	0xf8,
+0xb8,	0x1f,	0x0,	0x3,	0x6,	0x4,	0x0,	0x0,
+0xf0,	0x43,	0x33,	0x0,	0x12,	0x6,	0x0,	0xd6,
+0x2,	0x9,	0x0,	0xd0,	0xdb,	0xc6,	0x22,	0x3d,
+0xd8,	0x49,	0x40,	0xf8,	0xca,	0x3,	0xf8,	0xc0,
+0x4,	0x1b,	0x8,	0x0,	0x6,	0x6,	0x10,	0x0,
+0xdb,	0xc9,	0xf8,	0x55,	0xd8,	0x67,	0x49,	0xf8,
+0xd8,	0xc6,	0x9,	0xb8,	0xf0,	0x40,	0x3,	0x90,
+0xca,	0x86,	0x21,	0x80,	0x2,	0x1,	0x10,	0x8,
+0xdc,	0x21,	0x18,	0x78,	0xbc,	0x1f,	0x0,	0xe,
+0xdc,	0x43,	0x8,	0xf8,	0xdc,	0x48,	0x18,	0x79,
+0xca,	0x1,	0xf8,	0x40,	0x71,	0xe1,	0xd,	0x0,
+0x55,	0x6,	0x0,	0x0,	0x6,	0x6,	0x10,	0x0,
+0xd8,	0x40,	0x8,	0x39,	0xca,	0x86,	0x21,	0x80,
+0xf4,	0x43,	0xb,	0x1,	0xca,	0x1,	0xf8,	0x40,
+0x71,	0xe1,	0xd,	0x0,	0xb3,	0xff,	0x0,	0x6,
+0x55,	0x6,	0x0,	0x0,	0xf4,	0x48,	0xb,	0x1,
+0xca,	0x1,	0xf8,	0x40,	0x71,	0xe1,	0xd,	0x0,
+0x55,	0x6,	0x0,	0x0,	0x2e,	0x3f,	0x0,	0x59,
+0xff,	0xff,	0xff,	0xff,	0x2,	0x7,	0x0,	0xd2,
+0xeb,	0xc3,	0x0,	0x4,	0xdc,	0x23,	0x38,	0xf8,
+0xb8,	0x1f,	0x0,	0x5,	0x6,	0x4,	0x0,	0x0,
+0xf4,	0x47,	0x33,	0x4,	0xf0,	0x43,	0x3b,	0x0,
+0x12,	0x6,	0x0,	0xd2,	0x12,	0x7,	0x0,	0xd6,
+0x2,	0x9,	0x0,	0xd0,	0xdb,	0xc7,	0x22,	0x3d,
+0xd8,	0x49,	0x40,	0xf8,	0xca,	0x3,	0xf8,	0xc0,
+0x4,	0x1b,	0x8,	0x0,	0x6,	0x6,	0x10,	0x0,
+0xdb,	0xc9,	0xf8,	0x55,	0xd8,	0x67,	0x49,	0xf8,
+0xd8,	0xc6,	0x9,	0xb8,	0xf0,	0x40,	0xb,	0x90,
+0xca,	0x86,	0x21,	0x80,	0x2,	0xa,	0x10,	0x8,
+0xdc,	0x2a,	0x1a,	0xb8,	0xbc,	0x1f,	0x0,	0x10,
+0xdc,	0x43,	0x52,	0x78,	0xdc,	0x48,	0x48,	0xf9,
+0xca,	0x3,	0xf8,	0xc0,	0x71,	0xe3,	0x1d,	0x0,
+0x55,	0x26,	0x8,	0x0,	0x6,	0x6,	0x10,	0x0,
+0xd8,	0x41,	0x18,	0x79,	0xca,	0x86,	0x21,	0x80,
+0xf4,	0x49,	0x13,	0x1,	0xca,	0x2,	0xf8,	0x80,
+0x71,	0xe2,	0x15,	0x0,	0x55,	0x26,	0x8,	0x0,
+0xf0,	0x42,	0xb,	0x1,	0xb3,	0xff,	0x0,	0xd,
+0x12,	0x1,	0x0,	0xd0,	0xf4,	0x48,	0x13,	0x1,
+0xca,	0x2,	0xf8,	0x80,	0x71,	0xe2,	0x15,	0x0,
+0x55,	0x26,	0x8,	0x0,	0xdc,	0x23,	0x50,	0xf8,
+0xbc,	0x3f,	0x0,	0x3,	0xb3,	0xff,	0x0,	0x5,
+0x12,	0x1f,	0x0,	0xd0,	0xf0,	0x42,	0xb,	0x1,
+0xd8,	0x49,	0x8,	0x78,	0x12,	0x1,	0x0,	0xd0,
+0x9f,	0xff,	0xf4,	0x0,	0xeb,	0xc1,	0x3,	0x8c,
+0xdb,	0xc0,	0x40,	0xfd,	0xf0,	0x41,	0x11,	0x8,
+0xdb,	0xc0,	0x40,	0x1d,	0x7c,	0x1,	0xf9,	0x5,
+0xdb,	0xc1,	0x60,	0x7d,	0xd8,	0x42,	0x8,	0x78,
+0x73,	0x63,	0xb,	0x0,	0x7c,	0x1,	0xf9,	0x5,
+0xdb,	0xc1,	0x60,	0x7d,	0xd8,	0x42,	0x8,	0x78,
+0x77,	0x61,	0xb,	0x0,	0x78,	0x4,	0xfb,	0x0,
+0xdb,	0xc4,	0x80,	0x5d,	0xdc,	0x21,	0x0,	0x78,
+0xbc,	0x3f,	0xff,	0xf5,	0xcd,	0xc4,	0x40,	0x11,
+0x9f,	0xff,	0xf4,	0x0,	0x4,	0x0,	0xd0,	0x10,
+0xeb,	0xc2,	0x0,	0xc0,	0x4,	0x0,	0x0,	0x4,
+0x2,	0x1,	0x0,	0x0,	0xbb,	0x61,	0x0,	0x8,
+0xe1,	0xc2,	0x0,	0x50,	0xeb,	0xc0,	0x30,	0x20,
+0xcf,	0x81,	0x10,	0x45,	0xe1,	0xc0,	0x0,	0xc,
+0xd8,	0x41,	0x0,	0x78,	0xe3,	0xc0,	0x80,	0x0,
+0x73,	0x60,	0xb,	0x0,	0x2c,	0x3f,	0x10,	0x0,
+0xff,	0xff,	0xff,	0xff,	0x6,	0x18,	0xd0,	0x0,
+0x4,	0x1,	0xd0,	0x10,	0xf0,	0x5a,	0x3,	0x0,
+0xa3,	0xff,	0xff,	0x83,	0x4,	0x2,	0x8,	0x4,
+0x6,	0x18,	0xd0,	0x0,	0x2,	0x0,	0xd0,	0xd4,
+0x4,	0xc,	0xd0,	0x10,	0x6,	0x10,	0xd0,	0x0,
+0xbb,	0xe0,	0x0,	0x8,	0xf0,	0x5a,	0x6b,	0x90,
+0xeb,	0xc0,	0x4,	0x0,	0x12,	0x0,	0xd0,	0x90,
+0x2,	0x0,	0xd0,	0xd4,	0xf5,	0x40,	0x3,	0x1,
+0xb3,	0xff,	0x0,	0x3,	0x12,	0x0,	0xd0,	0xd4,
+0x12,	0x1f,	0xd0,	0x90,	0x6,	0xa,	0x68,	0x8,
+0x4,	0xe,	0x60,	0x4,	0xca,	0x8a,	0x82,	0x80,
+0x2,	0x0,	0xd0,	0xda,	0x12,	0x0,	0xd0,	0xdc,
+0x12,	0x1f,	0x68,	0x2,	0x4,	0x1b,	0x60,	0x0,
+0x2,	0x2,	0xd0,	0xd8,	0xeb,	0xc1,	0x1,	0x0,
+0xdc,	0x21,	0x10,	0x78,	0xb0,	0x1f,	0x0,	0x15,
+0x4,	0x0,	0xd0,	0xe4,	0x4,	0x1,	0xd0,	0x8,
+0x12,	0x1,	0x68,	0x2,	0x4,	0x1,	0xd0,	0xc,
+0x2,	0x2,	0x68,	0x0,	0xcf,	0x81,	0x80,	0x43,
+0xf1,	0xc1,	0xa,	0x8,	0xd9,	0xc2,	0x8,	0x78,
+0x12,	0x1,	0x68,	0x0,	0x2,	0x1,	0xd0,	0xd8,
+0xf4,	0x41,	0xb,	0x1,	0xca,	0x1,	0xf8,	0x40,
+0x71,	0xe1,	0xd,	0x0,	0x55,	0x2a,	0x0,	0x0,
+0xf0,	0x5a,	0x3,	0x0,	0xf0,	0x4c,	0xb,	0x0,
+0xa3,	0xff,	0xff,	0x81,	0xf0,	0x4e,	0x13,	0x0,
+0x2e,	0x3f,	0xff,	0xc3,	0xff,	0xff,	0xff,	0xff,
+0x2,	0x2,	0x68,	0x2,	0xf0,	0x42,	0x12,	0x1,
+0x12,	0x2,	0x68,	0x2,	0x6b,	0xff,	0xfd,	0x0,
+0x55,	0x2a,	0x0,	0x0,	0x2,	0x2,	0xd0,	0xd8,
+0xf4,	0x42,	0x12,	0x1,	0x12,	0x2,	0xd0,	0xd8,
+0x2,	0x2,	0xd0,	0xdc,	0xf4,	0x42,	0x13,	0x1,
+0x12,	0x2,	0xd0,	0xdc,	0x2,	0x22,	0xd0,	0xdc,
+0xbc,	0x3f,	0x0,	0x19,	0x2,	0x1,	0xd0,	0xd6,
+0xf4,	0x41,	0xb,	0x1,	0x12,	0x1,	0xd0,	0xd6,
+0x2,	0x21,	0xd0,	0xd6,	0xbc,	0x3f,	0x0,	0xa,
+0xa7,	0xff,	0xff,	0x9d,	0xff,	0xff,	0xff,	0xff,
+0x14,	0x0,	0xd0,	0xe4,	0xf0,	0x5a,	0x3,	0x0,
+0xf0,	0x4c,	0xb,	0x0,	0xa3,	0xff,	0xff,	0x66,
+0xf0,	0x4e,	0x13,	0x0,	0x2e,	0x3f,	0xff,	0xb6,
+0xff,	0xff,	0xff,	0xff,	0xf0,	0x4d,	0x6b,	0x10,
+0x12,	0x1f,	0x68,	0x2,	0x12,	0x1f,	0x68,	0x0,
+0x6,	0xa,	0x68,	0x8,	0xa3,	0xff,	0xff,	0x90,
+0xca,	0x8a,	0x82,	0x80,	0x14,	0x0,	0xd0,	0xe4,
+0x2,	0x0,	0xd0,	0xda,	0xb3,	0xff,	0xff,	0xc5,
+0x12,	0x0,	0xd0,	0xdc,	0xd8,	0x6b,	0xa,	0xf8,
+0xa3,	0xff,	0xff,	0x89,	0xd8,	0xca,	0xfa,	0xb8,
+0xb3,	0xff,	0xff,	0xc0,	0x14,	0x0,	0xd0,	0xe4,
+0x6,	0x18,	0xd0,	0x0,	0x4,	0xd,	0xd0,	0x10,
+0x4,	0x2,	0xd0,	0x8,	0xf0,	0x5a,	0xb,	0x0,
+0xf0,	0x4d,	0x3,	0x0,	0x12,	0x2,	0xd0,	0xd8,
+0x4,	0xe,	0x68,	0x4,	0xf0,	0x5a,	0x83,	0x0,
+0x14,	0x1c,	0xd0,	0xe4,	0xa3,	0xff,	0xfe,	0xdc,
+0xf0,	0x4e,	0x7b,	0xa,	0x12,	0x0,	0xd0,	0xd2,
+0xf0,	0x4e,	0x3,	0x0,	0xf0,	0x4f,	0xb,	0x0,
+0xa3,	0xff,	0xfe,	0xe2,	0xf0,	0x5a,	0x13,	0x0,
+0xdc,	0x20,	0xf8,	0x38,	0xb4,	0x3f,	0x0,	0x5,
+0xf0,	0x4e,	0x3,	0x0,	0xa3,	0xff,	0xff,	0x7,
+0xf0,	0x4d,	0xb,	0x0,	0xb7,	0xff,	0x0,	0x6,
+0x2,	0x1,	0x80,	0xd2,	0xa3,	0xff,	0xfe,	0xf2,
+0xf0,	0x4e,	0x3,	0x0,	0x12,	0x0,	0x70,	0xa,
+0x12,	0x80,	0x78,	0x0,	0xeb,	0xc1,	0x30,	0x0,
+0xe1,	0xc1,	0x0,	0xc,	0x7c,	0x0,	0xf8,	0x1,
+0xdb,	0xc0,	0xc0,	0x3d,	0xf1,	0xc0,	0x3,	0x3,
+0x73,	0x60,	0xb,	0x0,	0xeb,	0xc3,	0x0,	0x1,
+0xf0,	0x50,	0x3,	0x0,	0xf0,	0x4d,	0xb,	0x0,
+0xf0,	0x4e,	0x13,	0x0,	0xa3,	0xff,	0xff,	0x6,
+0x12,	0x3,	0x80,	0xd4,	0x0,	0x6,	0x0,	0xa4,
+0x0,	0x3,	0x0,	0xa5,	0x2,	0x8,	0x8,	0x98,
+0x6,	0x4,	0x8,	0x0,	0xdc,	0x26,	0x19,	0xb8,
+0xf0,	0x40,	0x53,	0x60,	0xb8,	0x3f,	0x0,	0x3d,
+0xeb,	0xcb,	0x0,	0x0,	0x10,	0x1f,	0x0,	0xa4,
+0xeb,	0xcb,	0x0,	0x1,	0x4,	0x1b,	0x0,	0x0,
+0x6,	0x6,	0x10,	0x0,	0xd8,	0x67,	0x41,	0xf8,
+0xd8,	0xc6,	0xf9,	0xb8,	0xca,	0x86,	0x21,	0x80,
+0x2,	0x1,	0x10,	0xa,	0xdc,	0x28,	0xa,	0x38,
+0xbc,	0x1f,	0x0,	0xe,	0xdc,	0x41,	0x40,	0xb8,
+0xf4,	0x22,	0x13,	0x40,	0xb0,	0x1f,	0x0,	0x6,
+0xeb,	0xc1,	0x0,	0x40,	0x6b,	0x3f,	0xfd,	0x0,
+0x55,	0x6,	0x50,	0x0,	0xb3,	0xff,	0x0,	0x2b,
+0x10,	0x1,	0x0,	0xa5,	0xf4,	0x42,	0x23,	0x1,
+0x10,	0x2,	0x0,	0xa5,	0x71,	0xe4,	0x25,	0x0,
+0xb3,	0xff,	0x0,	0x26,	0x55,	0x6,	0x50,	0x0,
+0x2,	0x1,	0x10,	0x8,	0xdc,	0x41,	0x43,	0x38,
+0xf4,	0x2c,	0x63,	0x40,	0xb0,	0x1f,	0x0,	0x6,
+0xeb,	0xc3,	0x0,	0x40,	0x6b,	0x3f,	0xfd,	0x0,
+0x55,	0x6,	0x50,	0x0,	0xb3,	0xff,	0x0,	0x1d,
+0x10,	0x3,	0x0,	0xa5,	0x10,	0xc,	0x0,	0xa5,
+0x6,	0x8,	0x10,	0x0,	0xdc,	0x43,	0x60,	0x78,
+0xca,	0x1,	0xf8,	0x40,	0xca,	0x88,	0x22,	0x0,
+0xdb,	0xcc,	0x21,	0x1d,	0xdb,	0xc4,	0x21,	0x7d,
+0xf4,	0x4c,	0x23,	0x1,	0xd8,	0x4a,	0x29,	0x78,
+0x71,	0xe4,	0x25,	0x0,	0x55,	0x6,	0x50,	0x0,
+0x2,	0x22,	0x10,	0xa,	0xb4,	0x3f,	0x0,	0xf,
+0xdc,	0x22,	0x8,	0xb8,	0xb4,	0x1f,	0x0,	0x7,
+0xf4,	0x41,	0xb,	0x1,	0xca,	0x1,	0xf8,	0x40,
+0x71,	0xe1,	0xd,	0x0,	0x55,	0x8,	0x28,	0x0,
+0xb3,	0xff,	0x0,	0x8,	0x10,	0x3,	0x0,	0xa5,
+0x0,	0x1,	0x0,	0xa5,	0xf4,	0x42,	0x23,	0x1,
+0xd8,	0x41,	0x10,	0x78,	0x10,	0x1,	0x0,	0xa5,
+0x71,	0xe4,	0x25,	0x0,	0x55,	0x8,	0x28,	0x0,
+0xf0,	0x4b,	0x3,	0x0,	0x9f,	0xff,	0xf4,	0x0,
+0xdc,	0x20,	0xf8,	0x38,	0xb0,	0x3f,	0x0,	0x4,
+0x6,	0x8,	0x20,	0x0,	0xb3,	0xff,	0x0,	0x3,
+0xeb,	0xca,	0x0,	0x0,	0x4,	0xa,	0x20,	0x94,
+0x14,	0x1,	0x20,	0x94,	0x0,	0x5,	0x20,	0x9a,
+0x6,	0x6,	0x10,	0x8,	0xeb,	0xcb,	0x1,	0x0,
+0xdc,	0x4b,	0x2a,	0xf8,	0xca,	0xb,	0xfa,	0xc0,
+0xca,	0x86,	0x41,	0x80,	0x2,	0x9,	0x10,	0x2,
+0x4,	0x1b,	0x18,	0x0,	0xdc,	0x69,	0x5a,	0x38,
+0xb1,	0x7f,	0x0,	0xc,	0xd8,	0x41,	0x2b,	0x38,
+0xf4,	0x4b,	0x1b,	0x1,	0xca,	0x3,	0xf8,	0xc0,
+0x71,	0xe3,	0x1d,	0x0,	0x55,	0x6,	0x60,	0x0,
+0xd8,	0x67,	0x59,	0xf8,	0xd8,	0xc6,	0xf9,	0xb8,
+0x16,	0x6,	0x10,	0x8,	0x12,	0x8,	0x10,	0x2,
+0xb3,	0xff,	0x0,	0xa,	0x10,	0x1f,	0x20,	0x9a,
+0xf4,	0x49,	0x1b,	0x1,	0xca,	0x3,	0xf8,	0xc0,
+0x71,	0xe3,	0x1d,	0x0,	0x55,	0x6,	0x60,	0x0,
+0xf0,	0x43,	0x1b,	0x1,	0x12,	0x1f,	0x10,	0x2,
+0xd8,	0x45,	0x18,	0xb8,	0x10,	0x2,	0x20,	0x9a,
+0xdc,	0x20,	0xf8,	0x38,	0xbc,	0x3f,	0x0,	0xc,
+0xdc,	0x2a,	0xa,	0xb8,	0xb4,	0x3f,	0x0,	0xa,
+0xcc,	0xca,	0x40,	0xa1,	0xdb,	0xc1,	0x40,	0x1d,
+0xd9,	0xc2,	0x0,	0xb8,	0xeb,	0xc0,	0x3,	0x88,
+0x7c,	0x3,	0xf9,	0x5,	0xf0,	0x40,	0x9,	0x8,
+0xdb,	0xc3,	0x60,	0x3d,	0xd8,	0x41,	0x0,	0x38,
+0x73,	0x62,	0x3,	0x0,	0x9f,	0xff,	0xf4,	0x0,
+0x4,	0x4,	0x8,	0x8,	0xdc,	0x20,	0xf8,	0x38,
+0xf0,	0x41,	0x3b,	0xa0,	0xb0,	0x3f,	0x0,	0x13,
+0xe3,	0xc5,	0x80,	0x0,	0xcc,	0xc0,	0x40,	0x61,
+0xdb,	0xc0,	0x40,	0x1d,	0xd9,	0xc1,	0x0,	0xf8,
+0xeb,	0xc0,	0x3,	0x88,	0x7c,	0x6,	0xf9,	0x5,
+0xf0,	0x40,	0x9,	0x8,	0xdb,	0xc6,	0x60,	0x3d,
+0xd8,	0x41,	0x0,	0x38,	0x73,	0x63,	0x3,	0x0,
+0x2,	0x1,	0x10,	0x98,	0x2,	0x0,	0x20,	0x8,
+0xf0,	0x41,	0xb,	0x10,	0xdc,	0x21,	0x0,	0x78,
+0xbc,	0x3f,	0x0,	0x3,	0xb3,	0xff,	0x0,	0x3,
+0x12,	0x1f,	0x20,	0xc,	0x12,	0x1,	0x20,	0xc,
+0x4,	0x81,	0x38,	0x0,	0xb7,	0xdf,	0xff,	0xff,
+0x4,	0x20,	0x10,	0x90,	0xb4,	0x3f,	0x0,	0x9,
+0x14,	0x81,	0x38,	0x0,	0x7c,	0x1,	0xf8,	0x1,
+0xdb,	0xc0,	0xc0,	0x1d,	0x77,	0x0,	0x0,	0x1,
+0x73,	0xe5,	0x29,	0x1,	0x26,	0x3f,	0x0,	0x3c,
+0xb3,	0xff,	0x0,	0x3,	0x77,	0x1,	0x8,	0x1,
+0x14,	0x80,	0x38,	0x0,	0x9f,	0xff,	0xf4,	0x0,
+0x6,	0x18,	0xd0,	0x0,	0xcc,	0xda,	0x40,	0xe1,
+0xdb,	0xda,	0x40,	0x9d,	0xd9,	0xc3,	0x11,	0x38,
+0x4,	0x0,	0xd0,	0x10,	0xf0,	0x5a,	0xb,	0x0,
+0xe3,	0xc5,	0x80,	0x0,	0xeb,	0xc2,	0x3,	0x88,
+0x7c,	0x6,	0xf9,	0x5,	0xf0,	0x42,	0x19,	0x8,
+0xdb,	0xc6,	0x60,	0xbd,	0xd8,	0x43,	0x10,	0xb8,
+0x73,	0x64,	0x13,	0x0,	0x7c,	0x2,	0xf8,	0x1,
+0xeb,	0xc3,	0x30,	0x0,	0xe1,	0xc3,	0x0,	0xc,
+0xdb,	0xc2,	0xc1,	0x3d,	0xd9,	0xc4,	0xd0,	0xb8,
+0x4,	0x86,	0x0,	0xa0,	0xb7,	0xdf,	0xff,	0xff,
+0xdc,	0x26,	0xf9,	0xb8,	0xbc,	0x3f,	0x0,	0x6,
+0x14,	0x1f,	0xd0,	0x90,	0x14,	0x82,	0x0,	0xa0,
+0xf1,	0xc4,	0x13,	0x3,	0xb3,	0xff,	0x0,	0xc,
+0x73,	0x62,	0x1b,	0x0,	0x14,	0x1f,	0xd0,	0x90,
+0x14,	0x2,	0x30,	0x90,	0x14,	0x82,	0x0,	0xa0,
+0xeb,	0xc0,	0x2,	0x3,	0xd9,	0xc4,	0x0,	0x38,
+0x73,	0x60,	0x1b,	0x0,	0x77,	0x63,	0x1b,	0x0,
+0x78,	0x0,	0xfb,	0x0,	0x28,	0x1f,	0xf8,	0x0,
+0xff,	0xff,	0xff,	0xff,	0x73,	0xe5,	0x29,	0x1,
+0x4,	0x2,	0x0,	0x8,	0x2,	0x3,	0x10,	0xa,
+0x2,	0x4,	0x10,	0xc,	0xdc,	0x63,	0x20,	0xf8,
+0xb4,	0x3f,	0x0,	0x3,	0x4,	0x3,	0x0,	0x0,
+0xbd,	0x3,	0x0,	0x3,	0x2e,	0x3f,	0x0,	0xa,
+0xff,	0xff,	0xff,	0xff,	0xa3,	0xff,	0xff,	0x36,
+0x12,	0x4,	0xd0,	0x98,	0xdc,	0x20,	0xf8,	0x38,
+0xb4,	0x3f,	0x0,	0x3,	0x2e,	0x3f,	0x0,	0x2a,
+0xff,	0xff,	0xff,	0xff,	0xa7,	0xff,	0x0,	0x28,
+0xff,	0xff,	0xff,	0xff,	0x6,	0x18,	0xd0,	0x0,
+0x4,	0x1,	0xd0,	0x10,	0xeb,	0xc9,	0x2,	0x74,
+0xf0,	0x5a,	0x43,	0x0,	0xe1,	0xc9,	0x0,	0xd0,
+0x4,	0x2,	0x8,	0x8,	0x7c,	0x3,	0xf8,	0x1,
+0xeb,	0xc0,	0x30,	0x0,	0xe1,	0xc0,	0x0,	0xc,
+0xdb,	0xc3,	0xc0,	0xfd,	0xf1,	0xc3,	0x1a,	0x1,
+0x73,	0x63,	0x3,	0x0,	0x4,	0x0,	0x8,	0x0,
+0xbd,	0x0,	0x0,	0x9,	0xf0,	0x48,	0x13,	0x0,
+0xa3,	0xff,	0xff,	0x96,	0xeb,	0xc0,	0x0,	0x0,
+0x16,	0x1f,	0x40,	0x0,	0xf0,	0x48,	0x43,	0x8,
+0x16,	0x1f,	0x40,	0x0,	0x2c,	0x3f,	0x48,	0x0,
+0xff,	0xff,	0xff,	0xff,	0x2,	0x0,	0x10,	0xa,
+0x2,	0x3,	0x10,	0xc,	0xdc,	0x60,	0x18,	0x38,
+0xbc,	0x3f,	0x0,	0x3,	0x2e,	0x3f,	0xff,	0xe6,
+0xff,	0xff,	0xff,	0xff,	0xf0,	0x41,	0x3,	0x0,
+0xf0,	0x48,	0xb,	0x0,	0xa3,	0xff,	0xff,	0x10,
+0x12,	0x3,	0xd0,	0x98,	0xdc,	0x20,	0xf8,	0x38,
+0xb4,	0x3f,	0x0,	0x3,	0x2e,	0x3f,	0x0,	0x4,
+0xff,	0xff,	0xff,	0xff,	0xa7,	0xff,	0x0,	0x2,
+0xff,	0xff,	0xff,	0xff,	0x6,	0x18,	0xd0,	0x0,
+0x4,	0xe,	0xd0,	0x10,	0xeb,	0xc0,	0x3,	0x80,
+0xf0,	0x4e,	0x13,	0x60,	0x7c,	0x3,	0xf9,	0x5,
+0xf0,	0x40,	0x9,	0x8,	0xdb,	0xc3,	0x60,	0x3d,
+0xd8,	0x41,	0x0,	0x38,	0x77,	0x60,	0x3,	0x0,
+0x78,	0xd,	0xfb,	0x0,	0xbc,	0xd,	0x0,	0x3,
+0x2e,	0x3f,	0xff,	0xf5,	0xff,	0xff,	0xff,	0xff,
+0x0,	0x0,	0x70,	0xa4,	0xf0,	0x4d,	0xb,	0x0,
+0xf0,	0x4e,	0x1b,	0x0,	0xdb,	0xc0,	0x20,	0x15,
+0xdb,	0xc0,	0x20,	0x3d,	0xd8,	0x42,	0x3,	0xf8,
+0x2,	0x0,	0x78,	0x2,	0xf0,	0x4f,	0x13,	0x0,
+0xf0,	0x5a,	0x23,	0x0,	0x14,	0x0,	0xd0,	0x8,
+0xeb,	0xc0,	0x0,	0x1,	0xa3,	0xff,	0xff,	0x35,
+0x10,	0x1f,	0xd0,	0x9a,	0x77,	0x6d,	0x69,	0x3,
+0xeb,	0xc0,	0x3,	0x80,	0xb3,	0xff,	0x0,	0x10,
+0xf0,	0x40,	0x89,	0x8,	0x7c,	0x0,	0xf9,	0x5,
+0xdb,	0xc0,	0x60,	0x3d,	0xd8,	0x51,	0x0,	0x38,
+0x77,	0x60,	0x3,	0x0,	0x78,	0xd,	0xfb,	0x0,
+0xbc,	0xd,	0x0,	0x3,	0x2e,	0x3f,	0x0,	0x18,
+0xff,	0xff,	0xff,	0xff,	0xf0,	0x4d,	0xb,	0x0,
+0xf0,	0x4f,	0x13,	0x0,	0xf0,	0x4e,	0x1b,	0x0,
+0xf0,	0x5a,	0x23,	0x0,	0xa3,	0xff,	0xff,	0x23,
+0xeb,	0xc0,	0x0,	0x0,	0x2,	0x20,	0x78,	0x2,
+0xbc,	0x3f,	0xff,	0xf1,	0x2,	0x0,	0x78,	0x0,
+0xf5,	0x40,	0x2,	0x80,	0x12,	0x0,	0xd0,	0x9c,
+0x0,	0x0,	0x70,	0xa4,	0xf0,	0x40,	0x3,	0x10,
+0x10,	0x0,	0x70,	0xa4,	0x2,	0x0,	0x78,	0x0,
+0xbe,	0x80,	0x0,	0x5,	0xf0,	0x4d,	0x3,	0x0,
+0xf0,	0x4e,	0xb,	0x0,	0xa3,	0xff,	0xff,	0x47,
+0xf0,	0x5a,	0x13,	0x0,	0x2e,	0x3f,	0x0,	0x33,
+0xff,	0xff,	0xff,	0xff,	0x6,	0x18,	0xd0,	0x0,
+0x4,	0xe,	0xd0,	0x10,	0x0,	0x0,	0x70,	0xa4,
+0xf0,	0x4e,	0xb,	0x60,	0xdb,	0xc0,	0x20,	0x15,
+0xdb,	0xc0,	0x20,	0x3d,	0xd8,	0x41,	0x3,	0xf8,
+0xeb,	0xc0,	0x3,	0x80,	0xf0,	0x40,	0x89,	0x8,
+0x0,	0x20,	0xd0,	0x9a,	0xb4,	0x3f,	0x0,	0x9,
+0x4,	0xd,	0xd0,	0x94,	0xf0,	0x4f,	0x13,	0x0,
+0xf0,	0x4e,	0x1b,	0x0,	0xf0,	0x4d,	0xb,	0x0,
+0xf0,	0x5a,	0x23,	0x0,	0xa3,	0xff,	0xff,	0x1,
+0xeb,	0xc0,	0x0,	0x0,	0xb7,	0xff,	0x0,	0xf,
+0x7c,	0x0,	0xf9,	0x5,	0xdb,	0xc0,	0x60,	0x3d,
+0xd8,	0x51,	0x0,	0x38,	0x77,	0x60,	0x3,	0x0,
+0x78,	0xd,	0xfb,	0x0,	0xbc,	0xd,	0x0,	0x3,
+0x2e,	0x3f,	0xff,	0xe7,	0xff,	0xff,	0xff,	0xff,
+0xf0,	0x4d,	0xb,	0x0,	0xf0,	0x4f,	0x13,	0x0,
+0xf0,	0x4e,	0x1b,	0x0,	0xf0,	0x5a,	0x23,	0x0,
+0xa3,	0xff,	0xfe,	0xf2,	0xeb,	0xc0,	0x0,	0x0,
+0x2,	0x20,	0x78,	0x2,	0xbc,	0x3f,	0xff,	0xe7,
+0x2,	0x0,	0x78,	0x0,	0xf5,	0x40,	0x2,	0x80,
+0x12,	0x0,	0xd0,	0x9c,	0x0,	0x0,	0x70,	0xa4,
+0xf0,	0x40,	0x3,	0x10,	0x10,	0x0,	0x70,	0xa4,
+0x2,	0x0,	0x78,	0x0,	0xbe,	0x80,	0x0,	0x5,
+0xf0,	0x4d,	0x3,	0x0,	0xf0,	0x4e,	0xb,	0x0,
+0xa3,	0xff,	0xff,	0x16,	0xf0,	0x5a,	0x13,	0x0,
+0x2e,	0x3f,	0x0,	0x2,	0xff,	0xff,	0xff,	0xff,
+0x6,	0x18,	0xd0,	0x0,	0x4,	0x0,	0xd0,	0x10,
+0xeb,	0xc9,	0x0,	0xd0,	0x2,	0x8,	0xd0,	0x98,
+0x4,	0x2,	0x0,	0x8,	0x6,	0x6,	0xd0,	0x0,
+0xf0,	0x5a,	0xb,	0x0,	0x6,	0x4,	0x10,	0x0,
+0xd8,	0x65,	0x41,	0x78,	0xe1,	0xc9,	0x0,	0xd0,
+0xd8,	0xc4,	0xf9,	0x38,	0xca,	0x84,	0x31,	0x0,
+0x4,	0x1b,	0x0,	0x0,	0x52,	0x24,	0x8,	0x9c,
+0x2,	0x3,	0x8,	0x9c,	0xbe,	0x83,	0x0,	0x4,
+0x14,	0x1f,	0x8,	0xc,	0x2c,	0x3f,	0x48,	0x0,
+0xff,	0xff,	0xff,	0xff,	0x2,	0x3,	0x10,	0x8,
+0xf0,	0x48,	0x23,	0x10,	0xdc,	0x24,	0x19,	0x38,
+0xbc,	0x3f,	0x0,	0x3,	0xb3,	0xff,	0x0,	0x3,
+0x12,	0x1f,	0x8,	0x98,	0x12,	0x4,	0x8,	0x98,
+0xa7,	0xff,	0xfe,	0x81,	0xff,	0xff,	0xff,	0xff,
+0xdc,	0x20,	0xf8,	0x38,	0xb4,	0x3f,	0x0,	0x3,
+0x2e,	0x3f,	0x0,	0x4,	0xff,	0xff,	0xff,	0xff,
+0xa7,	0xff,	0x0,	0x2,	0xff,	0xff,	0xff,	0xff,
+0x4,	0x2,	0xd0,	0x10,	0x4,	0x1,	0xd0,	0x8,
+0x0,	0x0,	0x10,	0xa4,	0xf0,	0x42,	0x13,	0x60,
+0xf5,	0x40,	0x3,	0xf,	0xd8,	0x42,	0x0,	0x38,
+0x2,	0x0,	0x0,	0x2,	0xd8,	0x41,	0x0,	0x38,
+0xa3,	0xff,	0xff,	0xa5,	0x14,	0x0,	0xd0,	0x8,
+0x4,	0x3,	0x8,	0x4,	0x4,	0x2,	0x8,	0x8,
+0xeb,	0xc6,	0x0,	0xf,	0x4,	0x84,	0x18,	0xc,
+0xb7,	0xdf,	0xff,	0xff,	0x14,	0x4,	0x8,	0x8,
+0xd9,	0xc4,	0x10,	0xb8,	0x14,	0x82,	0x18,	0xc,
+0x4,	0x1b,	0x8,	0x0,	0xf4,	0x26,	0x33,	0x7,
+0xb4,	0x3f,	0x0,	0x6,	0x4,	0x4,	0x0,	0x8,
+0xf0,	0x46,	0x1b,	0x1,	0xcc,	0x4,	0x0,	0xa9,
+0xd9,	0xc2,	0x18,	0xb8,	0x14,	0x2,	0x0,	0x8,
+0x4,	0x2,	0x0,	0x8,	0x6,	0x4,	0x0,	0x0,
+0xce,	0xe2,	0x60,	0x1,	0xd8,	0x65,	0x0,	0xf8,
+0xd8,	0xc4,	0xf8,	0xb8,	0x71,	0xe6,	0x35,	0x0,
+0x55,	0x22,	0x8,	0x0,	0xe3,	0xc0,	0x0,	0x54,
+0x2c,	0x3f,	0x0,	0x0,	0xff,	0xff,	0xff,	0xff,
+0x4,	0x3,	0x8,	0x8,	0xb6,	0x3,	0x0,	0x1b,
+0xeb,	0xc2,	0x2,	0x0,	0xcf,	0x3,	0x10,	0xc5,
+0xe1,	0xc2,	0x0,	0xc,	0xd8,	0x43,	0x10,	0xb8,
+0x77,	0x62,	0x13,	0x0,	0x78,	0x4,	0xfb,	0x0,
+0xb4,	0x4,	0x0,	0x5,	0xeb,	0xc2,	0x2,	0x0,
+0xe1,	0xc2,	0x0,	0xc,	0x77,	0x62,	0x13,	0x0,
+0x78,	0x4,	0xfb,	0x0,	0x4,	0x6,	0x8,	0x4,
+0xcf,	0x84,	0x80,	0x81,	0xcb,	0x2,	0xf8,	0xc0,
+0xeb,	0xc2,	0x0,	0xff,	0xdb,	0xc2,	0x18,	0xfc,
+0xcf,	0x6,	0x80,	0x81,	0xcb,	0x4,	0xf9,	0x40,
+0xcb,	0x3,	0xf9,	0x0,	0xcb,	0x2,	0xf8,	0x80,
+0xd9,	0x44,	0x28,	0xf8,	0xdd,	0x42,	0x20,	0xb8,
+0xd9,	0xc3,	0x10,	0xb8,	0xcb,	0x2,	0xf8,	0x80,
+0xf9,	0x2,	0x34,	0x20,	0x14,	0x6,	0x8,	0x4,
+0x4,	0x4,	0x8,	0x4,	0xeb,	0xc2,	0x0,	0x90,
+0xb8,	0x24,	0x0,	0x21,	0xe1,	0xc2,	0x0,	0xc,
+0xeb,	0xc3,	0x0,	0x8c,	0xe1,	0xc3,	0x0,	0xc,
+0x73,	0x64,	0x1b,	0x0,	0xb3,	0xff,	0x0,	0x9,
+0xeb,	0xc4,	0x0,	0x0,	0x77,	0x62,	0x13,	0x0,
+0x78,	0x5,	0xfb,	0x0,	0xdb,	0xc4,	0x10,	0xfd,
+0xd8,	0x41,	0x18,	0xf8,	0x14,	0x5,	0x18,	0x10,
+0xf0,	0x42,	0x13,	0x4,	0xf0,	0x44,	0x23,	0x1,
+0xf4,	0x24,	0x23,	0x10,	0xb5,	0x7f,	0xff,	0xf8,
+0xeb,	0xc6,	0x0,	0x4f,	0x4,	0x1b,	0x8,	0x0,
+0xf4,	0x26,	0x33,	0x7,	0xb4,	0x3f,	0x0,	0x6,
+0x4,	0x4,	0x0,	0x8,	0xf0,	0x46,	0x1b,	0x1,
+0xcc,	0x4,	0x0,	0xa9,	0xd9,	0xc2,	0x18,	0xb8,
+0x14,	0x2,	0x0,	0x8,	0x4,	0x2,	0x0,	0x8,
+0x6,	0x4,	0x0,	0x0,	0xce,	0xe2,	0x60,	0x1,
+0xd8,	0x65,	0x0,	0xf8,	0xd8,	0xc4,	0xf8,	0xb8,
+0x71,	0xe6,	0x35,	0x0,	0xb3,	0xff,	0x0,	0x2a,
+0x55,	0x22,	0x8,	0x0,	0xeb,	0xc6,	0x0,	0x8c,
+0xce,	0x4,	0x1,	0x41,	0xe1,	0xc6,	0x0,	0xc,
+0xb3,	0xff,	0x0,	0xf,	0xeb,	0xc7,	0x0,	0x0,
+0xdb,	0x5f,	0x29,	0x3d,	0xeb,	0xc3,	0x0,	0x1f,
+0xdc,	0x43,	0x20,	0xf8,	0xcb,	0x3,	0xf8,	0xc0,
+0xdb,	0x45,	0x19,	0x78,	0xdb,	0xc7,	0x10,	0xfd,
+0xd8,	0x41,	0x18,	0xf8,	0xf4,	0x44,	0x23,	0x10,
+0xdb,	0xc4,	0x11,	0x3d,	0x4,	0x3,	0x18,	0x10,
+0xd8,	0x42,	0x21,	0x38,	0x73,	0x63,	0x23,	0x0,
+0xf0,	0x47,	0x3b,	0x1,	0xdc,	0x25,	0xf9,	0x78,
+0xbc,	0x3f,	0xff,	0xf2,	0x4,	0x2,	0x8,	0x4,
+0x73,	0x62,	0x33,	0x0,	0x4,	0x2,	0x8,	0x8,
+0xb6,	0x2,	0x0,	0x11,	0xeb,	0xc6,	0x0,	0x7,
+0x4,	0x1b,	0x8,	0x0,	0xf4,	0x26,	0x33,	0x7,
+0xb4,	0x3f,	0x0,	0x6,	0x4,	0x4,	0x0,	0x8,
+0xf0,	0x46,	0x1b,	0x1,	0xcc,	0x4,	0x0,	0xa9,
+0xd9,	0xc2,	0x18,	0xb8,	0x14,	0x2,	0x0,	0x8,
+0x4,	0x2,	0x0,	0x8,	0x6,	0x4,	0x0,	0x0,
+0xce,	0xe2,	0x60,	0x1,	0xd8,	0x65,	0x0,	0xf8,
+0xd8,	0xc4,	0xf8,	0xb8,	0x71,	0xe6,	0x35,	0x0,
+0x55,	0x22,	0x8,	0x0,	0x9f,	0xff,	0xf4,	0x0,
+0x4,	0x4,	0x8,	0x4,	0xeb,	0xc3,	0x11,	0x0,
+0xf1,	0x44,	0x10,	0x3,	0xdb,	0xe2,	0xc0,	0x9d,
+0xb8,	0x3f,	0x0,	0x69,	0xe1,	0xc3,	0x0,	0xc,
+0xbc,	0x24,	0x0,	0x36,	0xeb,	0xc2,	0x11,	0xfc,
+0xe1,	0xc2,	0x0,	0xc,	0x73,	0x64,	0x13,	0x0,
+0x77,	0x62,	0x13,	0x0,	0x78,	0x2,	0xfb,	0x0,
+0xbc,	0x42,	0x0,	0x14,	0xf1,	0xc4,	0x10,	0x20,
+0x14,	0x2,	0x8,	0x4,	0xeb,	0xc6,	0x0,	0x7,
+0x4,	0x1b,	0x8,	0x0,	0xf4,	0x26,	0x33,	0x7,
+0xb4,	0x3f,	0x0,	0x6,	0x4,	0x4,	0x0,	0x8,
+0xf0,	0x46,	0x1b,	0x1,	0xcc,	0x4,	0x0,	0xa9,
+0xd9,	0xc2,	0x18,	0xb8,	0x14,	0x2,	0x0,	0x8,
+0x4,	0x2,	0x0,	0x8,	0x6,	0x4,	0x0,	0x0,
+0xce,	0xe2,	0x60,	0x1,	0xd8,	0x65,	0x0,	0xf8,
+0xd8,	0xc4,	0xf8,	0xb8,	0x71,	0xe6,	0x35,	0x0,
+0xb3,	0xff,	0x0,	0xc0,	0x55,	0x22,	0x8,	0x0,
+0xb3,	0xff,	0x0,	0x9,	0xeb,	0xc2,	0x0,	0x0,
+0x77,	0x63,	0x1b,	0x0,	0x78,	0x5,	0xfb,	0x0,
+0xdb,	0xc2,	0x11,	0x3d,	0xd8,	0x41,	0x21,	0x38,
+0x14,	0x5,	0x20,	0x10,	0xf0,	0x43,	0x1b,	0x4,
+0xf0,	0x42,	0x13,	0x1,	0xf4,	0x22,	0x13,	0x15,
+0xb5,	0x7f,	0xff,	0xf8,	0xeb,	0xc6,	0x0,	0x63,
+0x4,	0x1b,	0x8,	0x0,	0xf4,	0x26,	0x33,	0x7,
+0xb4,	0x3f,	0x0,	0x6,	0x4,	0x4,	0x0,	0x8,
+0xf0,	0x46,	0x1b,	0x1,	0xcc,	0x4,	0x0,	0xa9,
+0xd9,	0xc2,	0x18,	0xb8,	0x14,	0x2,	0x0,	0x8,
+0x4,	0x2,	0x0,	0x8,	0x6,	0x4,	0x0,	0x0,
+0xce,	0xe2,	0x60,	0x1,	0xd8,	0x65,	0x0,	0xf8,
+0xd8,	0xc4,	0xf8,	0xb8,	0x71,	0xe6,	0x35,	0x0,
+0xb3,	0xff,	0x0,	0xa4,	0x55,	0x22,	0x8,	0x0,
+0xeb,	0xc2,	0x11,	0xfc,	0xf1,	0xc4,	0x18,	0x40,
+0xe1,	0xc2,	0x0,	0xc,	0x73,	0x63,	0x13,	0x0,
+0x4,	0x6,	0x8,	0x8,	0xb3,	0xff,	0x0,	0x10,
+0xeb,	0xc2,	0x0,	0x0,	0xdb,	0x5f,	0x31,	0x7d,
+0xeb,	0xc3,	0x0,	0x1f,	0xdc,	0x43,	0x28,	0xf8,
+0xcb,	0x3,	0xf8,	0xc0,	0xdb,	0x46,	0x19,	0xb8,
+0xdb,	0xc2,	0x10,	0xfd,	0xd8,	0x41,	0x19,	0x38,
+0xeb,	0xc3,	0x11,	0x0,	0x4,	0x4,	0x20,	0x10,
+0xdb,	0xc5,	0x11,	0x7d,	0xe1,	0xc3,	0x0,	0xc,
+0xd8,	0x45,	0x18,	0xf8,	0x73,	0x64,	0x1b,	0x0,
+0xf0,	0x42,	0x13,	0x1,	0xdc,	0x26,	0xf9,	0xb8,
+0xbc,	0x3f,	0xff,	0xf1,	0x4,	0x3,	0x8,	0x4,
+0xeb,	0xc2,	0x11,	0xfc,	0xe1,	0xc2,	0x0,	0xc,
+0x73,	0x63,	0x13,	0x0,	0x77,	0x62,	0x13,	0x0,
+0x78,	0x2,	0xfb,	0x0,	0xbc,	0x42,	0x0,	0x85,
+0xf1,	0xc3,	0x10,	0x20,	0x14,	0x2,	0x8,	0x4,
+0xeb,	0xc6,	0x0,	0x7,	0x4,	0x1b,	0x8,	0x0,
+0xf4,	0x26,	0x33,	0x7,	0xb4,	0x3f,	0x0,	0x6,
+0x4,	0x4,	0x0,	0x8,	0xf0,	0x46,	0x1b,	0x1,
+0xcc,	0x4,	0x0,	0xa9,	0xd9,	0xc2,	0x18,	0xb8,
+0x14,	0x2,	0x0,	0x8,	0x4,	0x2,	0x0,	0x8,
+0x6,	0x4,	0x0,	0x0,	0xce,	0xe2,	0x60,	0x1,
+0xd8,	0x65,	0x0,	0xf8,	0xd8,	0xc4,	0xf8,	0xb8,
+0x71,	0xe6,	0x35,	0x0,	0xb3,	0xff,	0x0,	0x73,
+0x55,	0x22,	0x8,	0x0,	0xf4,	0x22,	0x13,	0x1,
+0xbc,	0x3f,	0x0,	0x38,	0xbc,	0x24,	0x0,	0x20,
+0xeb,	0xc2,	0x11,	0xfc,	0xe1,	0xc2,	0x0,	0xc,
+0x73,	0x64,	0x13,	0x0,	0xb3,	0xff,	0x0,	0x9,
+0xeb,	0xc2,	0x0,	0x0,	0x77,	0x63,	0x1b,	0x0,
+0x78,	0x5,	0xfb,	0x0,	0xdb,	0xc2,	0x11,	0x3d,
+0xd8,	0x41,	0x21,	0x38,	0x14,	0x5,	0x20,	0x10,
+0xf0,	0x43,	0x1b,	0x4,	0xf0,	0x42,	0x13,	0x1,
+0xf4,	0x22,	0x13,	0x8,	0xb5,	0x7f,	0xff,	0xf8,
+0xeb,	0xc6,	0x0,	0x2f,	0x4,	0x1b,	0x8,	0x0,
+0xf4,	0x26,	0x33,	0x7,	0xb4,	0x3f,	0x0,	0x6,
+0x4,	0x4,	0x0,	0x8,	0xf0,	0x46,	0x1b,	0x1,
+0xcc,	0x4,	0x0,	0xa9,	0xd9,	0xc2,	0x18,	0xb8,
+0x14,	0x2,	0x0,	0x8,	0x4,	0x2,	0x0,	0x8,
+0x6,	0x4,	0x0,	0x0,	0xce,	0xe2,	0x60,	0x1,
+0xd8,	0x65,	0x0,	0xf8,	0xd8,	0xc4,	0xf8,	0xb8,
+0x71,	0xe6,	0x35,	0x0,	0xb3,	0xff,	0x0,	0x51,
+0x55,	0x22,	0x8,	0x0,	0xeb,	0xc5,	0x11,	0xfc,
+0xf1,	0x44,	0x22,	0xff,	0xe1,	0xc5,	0x0,	0xc,
+0xb3,	0xff,	0x0,	0xf,	0xeb,	0xc6,	0x0,	0x0,
+0xdb,	0x5f,	0x20,	0xbd,	0xeb,	0xc0,	0x0,	0x1f,
+0xdc,	0x40,	0x10,	0x38,	0xcb,	0x0,	0xf8,	0x0,
+0xdb,	0x44,	0x1,	0x38,	0xdb,	0xc6,	0x10,	0x3d,
+0xd8,	0x41,	0x0,	0x38,	0xf4,	0x42,	0x13,	0x10,
+0xdb,	0xc2,	0x10,	0xbd,	0x4,	0x0,	0x0,	0x10,
+0xd8,	0x43,	0x10,	0xb8,	0x73,	0x60,	0x13,	0x0,
+0xf0,	0x46,	0x33,	0x1,	0xdc,	0x24,	0xf9,	0x38,
+0xbc,	0x3f,	0xff,	0xf2,	0x4,	0x0,	0x8,	0x4,
+0xb3,	0xff,	0x0,	0x3a,	0x73,	0x60,	0x2b,	0x0,
+0xf4,	0x22,	0x13,	0x2,	0xbc,	0x3f,	0x0,	0x37,
+0xbc,	0x24,	0x0,	0x20,	0xeb,	0xc2,	0x11,	0xfc,
+0xe1,	0xc2,	0x0,	0xc,	0x73,	0x64,	0x13,	0x0,
+0xb3,	0xff,	0x0,	0x9,	0xeb,	0xc2,	0x0,	0x0,
+0x77,	0x63,	0x1b,	0x0,	0x78,	0x5,	0xfb,	0x0,
+0xdb,	0xc2,	0x11,	0x3d,	0xd8,	0x41,	0x21,	0x38,
+0x14,	0x5,	0x20,	0x10,	0xf0,	0x43,	0x1b,	0x4,
+0xf0,	0x42,	0x13,	0x1,	0xf4,	0x22,	0x13,	0x2,
+0xb5,	0x7f,	0xff,	0xf8,	0xeb,	0xc6,	0x0,	0x17,
+0x4,	0x1b,	0x8,	0x0,	0xf4,	0x26,	0x33,	0x7,
+0xb4,	0x3f,	0x0,	0x6,	0x4,	0x4,	0x0,	0x8,
+0xf0,	0x46,	0x1b,	0x1,	0xcc,	0x4,	0x0,	0xa9,
+0xd9,	0xc2,	0x18,	0xb8,	0x14,	0x2,	0x0,	0x8,
+0x4,	0x2,	0x0,	0x8,	0x6,	0x4,	0x0,	0x0,
+0xce,	0xe2,	0x60,	0x1,	0xd8,	0x65,	0x0,	0xf8,
+0xd8,	0xc4,	0xf8,	0xb8,	0x71,	0xe6,	0x35,	0x0,
+0xb3,	0xff,	0x0,	0x18,	0x55,	0x22,	0x8,	0x0,
+0xeb,	0xc5,	0x11,	0xfc,	0xf1,	0x44,	0x22,	0xff,
+0xe1,	0xc5,	0x0,	0xc,	0xb3,	0xff,	0x0,	0xf,
+0xeb,	0xc6,	0x0,	0x0,	0xdb,	0x5f,	0x20,	0xbd,
+0xeb,	0xc0,	0x0,	0x1f,	0xdc,	0x40,	0x10,	0x38,
+0xcb,	0x0,	0xf8,	0x0,	0xdb,	0x44,	0x1,	0x38,
+0xdb,	0xc6,	0x10,	0x3d,	0xd8,	0x41,	0x0,	0x38,
+0xf4,	0x42,	0x13,	0x10,	0xdb,	0xc2,	0x10,	0xbd,
+0x4,	0x0,	0x0,	0x10,	0xd8,	0x43,	0x10,	0xb8,
+0x73,	0x60,	0x13,	0x0,	0xf0,	0x46,	0x33,	0x1,
+0xdc,	0x24,	0xf9,	0x38,	0xbc,	0x3f,	0xff,	0xf2,
+0x4,	0x0,	0x8,	0x4,	0x73,	0x60,	0x2b,	0x0,
+0x9f,	0xff,	0xf4,	0x0,	0xe3,	0xc0,	0x0,	0x54,
+0x2c,	0x3f,	0x0,	0x0,	0xff,	0xff,	0xff,	0xff,
+0xeb,	0xc0,	0x0,	0x1,	0x70,	0xe0,	0x1,	0x1,
+0x2e,	0x3f,	0xff,	0xfb,	0xff,	0xff,	0xff,	0xff,
+0x6,	0x18,	0xd0,	0x0,	0xec,	0x59,	0x0,	0x8,
+0x4,	0x1,	0xe0,	0x4,	0x4,	0x0,	0xe0,	0x8,
+0x6,	0x2,	0x8,	0x8,	0x16,	0x2,	0x0,	0x8,
+0x6,	0x2,	0x8,	0x0,	0xa3,	0xff,	0xff,	0xf5,
+0x16,	0x2,	0x0,	0x0,	0x4,	0x2,	0x0,	0x8,
+0x4,	0x1,	0x0,	0x4,	0xeb,	0xc0,	0x0,	0x1,
+0x14,	0x1,	0x10,	0x0,	0x70,	0xe0,	0x1,	0x1,
+0x2e,	0x3f,	0xff,	0xf2,	0xff,	0xff,	0xff,	0xff,
+0x6,	0x18,	0xd0,	0x0,	0x0,	0x3,	0xe0,	0x3,
+0xf0,	0x5a,	0x3,	0x0,	0xec,	0x23,	0x0,	0x5,
+0xb8,	0x1f,	0x0,	0x1b,	0xf0,	0x5c,	0xb,	0x0,
+0x97,	0x43,	0x0,	0x1,	0xb7,	0xff,	0x0,	0xa,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x0,	0xb,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x0,	0xc,
+0xff,	0xff,	0xff,	0xff,	0xb3,	0xff,	0x0,	0xd,
+0xf0,	0x41,	0x3,	0x0,	0xb7,	0xff,	0x0,	0xe,
+0xff,	0xff,	0xff,	0xff,	0xa7,	0xff,	0xfe,	0x91,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x0,	0xc,
+0xa7,	0xff,	0xfe,	0xf6,	0xff,	0xff,	0xff,	0xff,
+0xb7,	0xff,	0x0,	0x9,	0xa7,	0xff,	0xff,	0xd5,
+0xff,	0xff,	0xff,	0xff,	0xb7,	0xff,	0x0,	0x6,
+0xa7,	0xff,	0xff,	0xdf,	0xff,	0xff,	0xff,	0xff,
+0xb7,	0xff,	0x0,	0x3,	0xa7,	0xff,	0xfe,	0x6b,
+0xff,	0xff,	0xff,	0xff,	0xe3,	0xc0,	0x0,	0x54,
+0x2c,	0x3f,	0x0,	0x0,	0xff,	0xff,	0xff,	0xff,
+0xeb,	0xc2,	0x30,	0x70,	0xe1,	0xc2,	0x0,	0xc,
+0x77,	0x62,	0x13,	0x0,	0x78,	0x3,	0xfb,	0x0,
+0x77,	0x63,	0x19,	0x3,	0xeb,	0xc1,	0x6,	0xa7,
+0xeb,	0xc0,	0x0,	0x18,	0xe9,	0xc1,	0x0,	0x0,
+0xe1,	0xc0,	0x0,	0xb,	0x73,	0x61,	0x3,	0x0,
+0xeb,	0xc0,	0x2,	0x0,	0xe1,	0xc0,	0x0,	0xb,
+0xe3,	0xc1,	0x80,	0x0,	0x73,	0x61,	0x3,	0x0,
+0xeb,	0xc0,	0x2,	0x4,	0xe1,	0xc0,	0x0,	0xb,
+0x73,	0x7f,	0x3,	0x0,	0xeb,	0xc1,	0x2,	0xc0,
+0xeb,	0xc0,	0x0,	0x28,	0xe1,	0xc1,	0x0,	0x50,
+0xe1,	0xc0,	0x0,	0xb,	0x73,	0x61,	0x3,	0x0,
+0xf5,	0x43,	0x0,	0x80,	0x73,	0x60,	0x13,	0x0,
+0xeb,	0xc1,	0x0,	0x8,	0xe1,	0xc1,	0x0,	0xf,
+0x77,	0x61,	0xb,	0x0,	0x78,	0x0,	0xfb,	0x0,
+0xf1,	0xc0,	0x2,	0x14,	0x73,	0x60,	0xb,	0x0,
+0xe3,	0xc1,	0x81,	0x0,	0xe3,	0xc0,	0x0,	0xb,
+0x73,	0x61,	0x3,	0x0,	0xc6,	0x0,	0x6,	0x73,
+0x2c,	0x3f,	0xf0,	0x0,	0xff,	0xff,	0xff,	0xff,
+0xeb,	0xc2,	0x2,	0x4,	0xe1,	0xc2,	0x0,	0xb,
+0x77,	0x62,	0x13,	0x0,	0x78,	0x1,	0xfb,	0x0,
+0xec,	0x21,	0x0,	0x1f,	0xb4,	0x1f,	0x0,	0x2d,
+0xe3,	0xc1,	0x1,	0x0,	0xe3,	0xc0,	0x0,	0xb,
+0x73,	0x61,	0x3,	0x0,	0xeb,	0xc0,	0x0,	0x4,
+0xe1,	0xc0,	0x0,	0xb,	0x77,	0x60,	0x3,	0x0,
+0x78,	0x0,	0xfb,	0x0,	0xb4,	0x0,	0x0,	0x25,
+0x77,	0x62,	0x13,	0x0,	0x78,	0x1,	0xfb,	0x0,
+0xeb,	0xc0,	0x0,	0x84,	0xe1,	0xc0,	0x0,	0xf,
+0x77,	0x60,	0x3,	0x0,	0x78,	0x0,	0xfb,	0x0,
+0xdc,	0x21,	0x0,	0x78,	0xbc,	0x3f,	0x0,	0x1d,
+0xeb,	0xc0,	0x0,	0x8c,	0xe1,	0xc0,	0x0,	0xf,
+0x77,	0x60,	0x3,	0x0,	0x78,	0x0,	0xfb,	0x0,
+0xdc,	0x21,	0x0,	0x78,	0xbc,	0x3f,	0x0,	0x17,
+0xeb,	0xc0,	0x0,	0x64,	0xe1,	0xc0,	0x0,	0xf,
+0xef,	0xc1,	0x0,	0x0,	0x73,	0x61,	0x3,	0x0,
+0xeb,	0xc1,	0x0,	0x8,	0xe1,	0xc1,	0x0,	0xf,
+0x77,	0x61,	0xb,	0x0,	0x78,	0x0,	0xfb,	0x0,
+0xf1,	0xc0,	0x2,	0x4,	0xf5,	0x40,	0x2,	0x10,
+0x73,	0x60,	0xb,	0x0,	0xeb,	0xc0,	0x30,	0x70,
+0xe1,	0xc0,	0x0,	0xc,	0x73,	0x7c,	0x3,	0x0,
+0xeb,	0xc0,	0x2,	0x0,	0xe1,	0xc0,	0x0,	0xb,
+0x73,	0x7f,	0x3,	0x0,	0xe3,	0xc0,	0x0,	0x40,
+0xc6,	0xc,	0x30,	0x74,	0x73,	0x60,	0xf3,	0x0,
+0x28,	0x1f,	0xf8,	0x0,	0xff,	0xff,	0xff,	0xff,
+0x28,	0x3f,	0xf8,	0x0,	0xff,	0xff,	0xff,	0xff,
+0xeb,	0xc0,	0x3,	0x88,	0xdb,	0xda,	0x40,	0x9d,
+0xdb,	0xda,	0x40,	0x7d,	0xd9,	0xc2,	0x8,	0x78,
+0xe1,	0xc0,	0x0,	0xb,	0xf0,	0x5a,	0x13,	0x0,
+0x73,	0x61,	0x3,	0x0,	0x77,	0x7a,	0xd1,	0x3,
+0xb3,	0xff,	0x0,	0x6,	0xeb,	0xc1,	0x0,	0x0,
+0xdb,	0xc1,	0x10,	0x3d,	0xd8,	0x42,	0x0,	0x38,
+0x14,	0x1f,	0x0,	0x0,	0xf0,	0x41,	0xb,	0x1,
+0xf4,	0x21,	0xb,	0x40,	0xb5,	0x7f,	0xff,	0xfb,
+0xeb,	0xc0,	0x1,	0x0,	0x14,	0x0,	0x10,	0x8,
+0x14,	0x1f,	0x10,	0xc,	0xc6,	0x50,	0x0,	0x10,
+0x2c,	0x3f,	0xf0,	0x0,	0xff,	0xff,	0xff,	0xff,
+0xb3,	0xff,	0x0,	0x3,	0xeb,	0xc3,	0x0,	0x0,
+0x78,	0x3,	0xf9,	0x0,	0xbc,	0x3,	0xff,	0xff,
+0xeb,	0xc1,	0x30,	0x0,	0xdb,	0xc3,	0xc0,	0xbd,
+0xeb,	0xc0,	0x2,	0x3,	0xd9,	0xc2,	0x0,	0x38,
+0xe1,	0xc1,	0x0,	0xc,	0x73,	0x60,	0xb,	0x0,
+0xeb,	0xc2,	0x30,	0x78,	0xe1,	0xc2,	0x0,	0xc,
+0x77,	0x62,	0x13,	0x0,	0x78,	0x1,	0xfb,	0x0,
+0xdb,	0xc3,	0x80,	0x3d,	0xf5,	0x41,	0x9,	0xff,
+0xd9,	0xc1,	0x0,	0x38,	0x73,	0x60,	0x13,	0x0,
+0x7c,	0x0,	0xf8,	0x1,	0x77,	0x3,	0x18,	0x1,
+0x26,	0x1f,	0xff,	0x7e,	0x77,	0x60,	0x0,	0x1,
+0x9f,	0xff,	0xf4,	0x0,	0x4d,	0xdc,	0x86,	0x9f,
+};
+
+int ucode_size = sizeof(ucode_array);
diff --git a/board/lenovo/lenovo_g8296/pci.c b/board/lenovo/lenovo_g8296/pci.c
new file mode 100644
index 0000000..83d0f82
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/pci.c
@@ -0,0 +1,271 @@
+/*
+ * Copyright 2007-2009 Freescale Semiconductor, Inc.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <command.h>
+#include <pci.h>
+#include <asm/fsl_pci.h>
+#include <libfdt.h>
+#include <fdt_support.h>
+//#include <asm/fsl_corenet_serdes.h>
+
+#ifdef CONFIG_PCIE1
+static struct pci_controller pcie1_hose;
+#endif
+
+#ifdef CONFIG_PCIE2
+static struct pci_controller pcie2_hose;
+#endif
+
+#ifdef CONFIG_PCIE3
+static struct pci_controller pcie3_hose;
+#endif
+
+static int first_free_busno = 0;
+#if defined(CONFIG_KRAKEN)
+extern int mda_extra_if;
+#endif
+
+void pci_init_board(void)
+{
+        volatile ccsr_gur_t *gur = (void *)(CONFIG_SYS_MPC85xx_GUTS_ADDR);
+        uint devdisr = gur->devdisr;
+        uint prtcl = (gur->rcwsr[4] & FSL_CORENET_RCWSR4_SRDS_PRTCL) >> 26;
+        uint host_agent_b1 = (gur->rcwsr[8] & FSL_CORENET_RCWSR8_HOST_AGT_B1)
+                >> 21;
+#ifdef DEBUG
+        uint host_agent_b2 = (gur->rcwsr[8] & FSL_CORENET_RCWSR8_HOST_AGT_B2)
+                >> 20;
+#endif
+        volatile ccsr_fsl_pci_t *pci;
+        struct pci_controller *hose;
+        int pcie_ep, pcie_configured;
+        struct pci_region *r;
+
+#ifdef DEBUG
+        debug(" pci_init_board: devdisr=%x, serdes_prtcl=%x, host_agent_b1=%x, "
+              "host_agent_b2=%x\n", devdisr, prtcl, host_agent_b1,
+              host_agent_b2);
+#endif
+#ifdef CONFIG_PCIE1
+        pci = (ccsr_fsl_pci_t *) CONFIG_SYS_PCIE1_ADDR;
+        hose = &pcie1_hose;
+        pcie_ep = (host_agent_b1 >= 1 && host_agent_b1 <= 6);
+        pcie_configured = is_serdes_configured(PCIE1);
+        r = hose->regions;
+
+        if (pcie_configured && !(devdisr & FSL_CORENET_DEVDISR_PCIE1)) {
+                printf("\n    PCIE1 connected to Slot 1 as %s "
+                       "(base address %x)",
+                        pcie_ep ? "End Point" : "Root Complex",
+                        (uint)pci);
+                if (pci->pme_msg_det) {
+                        pci->pme_msg_det = 0xffffffff;
+                        debug (" with errors.  Clearing.  Now 0x%08x",pci->pme_msg_det);
+                }
+                printf ("\n");
+                if (pcie_ep) {
+                        /* set up a minimum inbound memory map for Freescale
+                         *                          * pcie device */
+                        volatile pit_t *pi = &pci->pit[2]; /*inbound 1 */
+                        pi->pitar = 0x00000000;
+                        pi->piwbar = 0x00000000;
+                        pi->piwar = PIWAR_EN | PIWAR_LOCAL | PIWAR_READ_SNOOP |
+                                        PIWAR_WRITE_SNOOP /*| PIWAR_OWS_4K*/;
+                        hose->region_count = 0;
+                } else {
+                        /* inbound */
+                        r += fsl_pci_setup_inbound_windows(r);
+
+                        /* outbound memory */
+                        pci_set_region(hose->regions + 1,
+                                       CONFIG_SYS_PCIE1_MEM_BUS,
+                                       CONFIG_SYS_PCIE1_MEM_PHYS,
+                                       CONFIG_SYS_PCIE1_MEM_SIZE,
+                                       PCI_REGION_MEM);
+
+                        /* outbound io */
+                        pci_set_region(hose->regions + 2,
+                                       CONFIG_SYS_PCIE1_IO_BUS,
+                                       CONFIG_SYS_PCIE1_IO_PHYS,
+                                       CONFIG_SYS_PCIE1_IO_SIZE,
+                                       PCI_REGION_IO);
+
+                        hose->region_count = 3;
+                }
+
+                hose->first_busno=first_free_busno;
+
+                pci_setup_indirect(hose, (int) &pci->cfg_addr, (int) &pci->cfg_data);
+
+                fsl_pci_init(hose);
+
+                first_free_busno=hose->last_busno+1;
+                printf("    PCIE1 on bus %02x - %02x\n",
+                       hose->first_busno,hose->last_busno);
+
+        } else {
+                printf ("    PCIE1: disabled\n");
+        }
+#else
+        gur->devdisr |= FSL_CORENET_DEVDISR_PCIE1; /* disable */
+#endif
+
+#ifdef CONFIG_PCIE2
+        pci = (ccsr_fsl_pci_t *) CONFIG_SYS_PCIE2_ADDR;
+        hose = &pcie2_hose;
+        pcie_ep = (host_agent_b1 == 1) || (host_agent_b1 == 2) ||
+                (host_agent_b1 == 5 || host_agent_b1 == 6);
+        pcie_configured = is_serdes_configured(PCIE2);
+        r = hose->regions;
+
+        if (pcie_configured && !(devdisr & FSL_CORENET_DEVDISR_PCIE2)) {
+                printf("\n    PCIE2 connected to Slot 3 as %s "
+                       "(base address %x)",
+                        pcie_ep ? "End Point" : "Root Complex",
+                        (uint)pci);
+                if (pci->pme_msg_det) {
+                        pci->pme_msg_det = 0xffffffff;
+                        debug (" with errors.  Clearing.  Now 0x%08x",pci->pme_msg_det);
+                }
+                printf ("\n");
+
+                if (pcie_ep) {
+                        /* set up a minimum inbound memory map for Freescale
+                         *                          * pcie device */
+                        volatile pit_t *pi = &pci->pit[2]; /*inbound 1 */
+                        pi->pitar = 0x00000000;
+                        pi->piwbar = 0x00000000;
+                        pi->piwar = PIWAR_EN | PIWAR_LOCAL | PIWAR_READ_SNOOP |
+                                        PIWAR_WRITE_SNOOP | PIWAR_OWS_4K;
+                        hose->region_count = 0;
+                } else {
+                        /* inbound */
+                        r += fsl_pci_setup_inbound_windows(r);
+
+                        /* outbound memory */
+                        pci_set_region(hose->regions + 1,
+                                       CONFIG_SYS_PCIE2_MEM_BUS,
+                                       CONFIG_SYS_PCIE2_MEM_PHYS,
+                                       CONFIG_SYS_PCIE2_MEM_SIZE,
+                                       PCI_REGION_MEM);
+
+                        /* outbound io */
+                        pci_set_region(hose->regions + 2,
+                                       CONFIG_SYS_PCIE2_IO_BUS,
+                                       CONFIG_SYS_PCIE2_IO_PHYS,
+                                       CONFIG_SYS_PCIE2_IO_SIZE,
+                                       PCI_REGION_IO);
+
+                        hose->region_count = 3;
+                }
+                hose->first_busno=first_free_busno;
+                pci_setup_indirect(hose, (int) &pci->cfg_addr, (int) &pci->cfg_data);
+
+                fsl_pci_init(hose);
+                first_free_busno=hose->last_busno+1;
+                printf ("    PCIE2 on bus %02x - %02x\n",
+                        hose->first_busno,hose->last_busno);
+
+        } else {
+                printf ("    PCIE2: disabled\n");
+        }
+#else
+        gur->devdisr |= FSL_CORENET_DEVDISR_PCIE2; /* disable */
+#endif
+
+#ifdef CONFIG_PCIE3
+        pci = (ccsr_fsl_pci_t *) CONFIG_SYS_PCIE3_ADDR;
+        hose = &pcie3_hose;
+        pcie_ep = (host_agent_b1 == 1) || (host_agent_b1 == 3) ||
+                (host_agent_b1 == 5) || (host_agent_b1 == 7);
+        pcie_configured = is_serdes_configured(PCIE3);
+#if defined(CONFIG_KRAKEN)
+        /*We want to disable the unused interfaces. Here is as good a place as any*/
+        if (!mda_extra_if)
+        {
+            pcie_configured = 0;
+            gur->devdisr |= FSL_CORENET_DEVDISR_PCIE3; /* disable */
+            gur->devdisr2 |= FSL_CORENET_DEVDISR2_FM2_DTSEC2; /* disable */
+        }
+
+#endif
+        r = hose->regions;
+
+        if (pcie_configured && !(devdisr & FSL_CORENET_DEVDISR_PCIE3)) {
+                printf("\n    PCIE3 connected to Slot 2 as %s"
+                       "(base address %x)",
+                        pcie_ep ? "End Point" : "Root Complex",
+                        (uint)pci);
+                if (pci->pme_msg_det) {
+                        pci->pme_msg_det = 0xffffffff;
+                        debug (" with errors.  Clearing.  Now 0x%08x",pci->pme_msg_det);
+                }
+                printf ("\n");
+
+                /* inbound */
+                r += fsl_pci_setup_inbound_windows(r);
+
+                /* outbound memory */
+                pci_set_region(hose->regions + 1,
+                               CONFIG_SYS_PCIE3_MEM_BUS,
+                               CONFIG_SYS_PCIE3_MEM_PHYS,
+                               CONFIG_SYS_PCIE3_MEM_SIZE,
+                               PCI_REGION_MEM);
+
+                /* outbound io */
+                pci_set_region(hose->regions + 2,
+                               CONFIG_SYS_PCIE3_IO_BUS,
+                               CONFIG_SYS_PCIE3_IO_PHYS,
+                               CONFIG_SYS_PCIE3_IO_SIZE,
+                               PCI_REGION_IO);
+
+                hose->region_count = 3;
+                hose->first_busno=first_free_busno;
+                pci_setup_indirect(hose, (int) &pci->cfg_addr, (int) &pci->cfg_data);
+
+                fsl_pci_init(hose);
+
+                first_free_busno=hose->last_busno+1;
+                printf ("    PCIE3 on bus %02x - %02x\n",
+                        hose->first_busno,hose->last_busno);
+
+        } else {
+                printf ("    PCIE3: disabled\n");
+        }
+#else
+        gur->devdisr |= FSL_CORENET_DEVDISR_PCIE3; /* disable */
+#endif
+}
+
+void pci_of_setup(void *blob, bd_t *bd)
+{
+#ifdef CONFIG_PCIE1
+        ft_fsl_pci_setup(blob, "pci0", &pcie1_hose);
+#endif
+#ifdef CONFIG_PCIE2
+        ft_fsl_pci_setup(blob, "pci1", &pcie2_hose);
+#endif
+#ifdef CONFIG_PCIE3
+        ft_fsl_pci_setup(blob, "pci2", &pcie3_hose);
+#endif
+}
diff --git a/board/lenovo/lenovo_g8296/tlb.c b/board/lenovo/lenovo_g8296/tlb.c
new file mode 100644
index 0000000..12b0c38
--- /dev/null
+++ b/board/lenovo/lenovo_g8296/tlb.c
@@ -0,0 +1,109 @@
+/*
+ * Copyright 2008-2011 Freescale Semiconductor, Inc.
+ *
+ * (C) Copyright 2000
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/mmu.h>
+
+struct fsl_e_tlb_entry tlb_table[] = {
+	/* TLB 0 - for temp stack in cache */
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR + 4 * 1024,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS + 4 * 1024,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR + 8 * 1024,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS + 8 * 1024,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR + 12 * 1024,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS + 12 * 1024,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+
+	//SET_TLB_ENTRY(0, CONFIG_SYS_CPLD_BASE, CONFIG_SYS_CPLD_BASE_PHYS,
+        //              MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+        //              0, 0, BOOKE_PAGESZ_64K, 0),
+
+	/* TLB 1 */
+	/* *I*** - Covers boot page */
+	SET_TLB_ENTRY(1, 0xfffff000, 0xfffff000,
+		      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 0, BOOKE_PAGESZ_4K, 1),
+
+	/* *I*G* - CCSRBAR */
+	SET_TLB_ENTRY(1, CONFIG_SYS_CCSRBAR, CONFIG_SYS_CCSRBAR_PHYS,
+		      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 1, BOOKE_PAGESZ_16M, 1),
+
+	/* *I*G* - Flash, localbus */
+	/* This will be changed to *I*G* after relocation to RAM. */
+	SET_TLB_ENTRY(1, CONFIG_SYS_FLASH_BASE, CONFIG_SYS_FLASH_BASE_PHYS,
+		      MAS3_SX|MAS3_SR, MAS2_W|MAS2_G,
+		      0, 2, BOOKE_PAGESZ_64M, 1),
+/*
+        SET_TLB_ENTRY(1, CONFIG_SYS_CPLD_BASE, CONFIG_SYS_CPLD_BASE_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 3, BOOKE_PAGESZ_64K, 0),
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_NAND_BASE, CONFIG_SYS_NAND_BASE_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 4, BOOKE_PAGESZ_1M, 1),
+*/
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_MEM_VIRT, CONFIG_SYS_PCIE1_MEM_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 3, BOOKE_PAGESZ_1G, 1),
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_MEM_VIRT + 0x40000000, CONFIG_SYS_PCIE1_MEM_PHYS + 0x40000000,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 4, BOOKE_PAGESZ_256M, 1),
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_MEM_VIRT + 0x50000000, CONFIG_SYS_PCIE1_MEM_PHYS + 0x50000000,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 5, BOOKE_PAGESZ_256M, 1),
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_IO_VIRT, CONFIG_SYS_PCIE1_IO_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 6, BOOKE_PAGESZ_256K, 1),
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_BMAN_MEM_BASE, CONFIG_SYS_BMAN_MEM_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, 0,
+                      0, 16, BOOKE_PAGESZ_1M, 1),
+        SET_TLB_ENTRY(1, CONFIG_SYS_BMAN_MEM_BASE + 0x00100000, CONFIG_SYS_BMAN_MEM_PHYS + 0x00100000,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 17, BOOKE_PAGESZ_1M, 1),
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_QMAN_MEM_BASE, CONFIG_SYS_QMAN_MEM_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, 0,
+                      0, 18, BOOKE_PAGESZ_1M, 1),
+        SET_TLB_ENTRY(1, CONFIG_SYS_QMAN_MEM_BASE + 0x00100000, CONFIG_SYS_QMAN_MEM_PHYS + 0x00100000,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 19, BOOKE_PAGESZ_1M, 1),
+
+#ifdef CONFIG_SYS_DCSRBAR_PHYS
+        SET_TLB_ENTRY(1, CONFIG_SYS_DCSRBAR, CONFIG_SYS_DCSRBAR_PHYS,
+                      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 13, BOOKE_PAGESZ_4M, 1),
+#endif
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_CPLD_BASE, CONFIG_SYS_CPLD_BASE_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 20, BOOKE_PAGESZ_64K, 0),
+
+        SET_TLB_ENTRY(1, CONFIG_SYS_NAND_BASE, CONFIG_SYS_NAND_BASE_PHYS,
+                      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+                      0, 21, BOOKE_PAGESZ_1M, 1),
+
+
+};
+
+int num_tlb_entries = ARRAY_SIZE(tlb_table);
diff --git a/boards.cfg b/boards.cfg
index e4b0d44..2d17176 100644
--- a/boards.cfg
+++ b/boards.cfg
@@ -1108,5 +1108,8 @@ gr_xc3s_1500                 sparc       leon3       -                   gaisler
 coreboot-x86                 x86         x86        coreboot            chromebook-x86 coreboot    coreboot:SYS_TEXT_BASE=0x01110000
 eNET                         x86         x86        eNET                -              sc520       eNET:SYS_TEXT_BASE=0x38040000
 eNET_SRAM                    x86         x86        eNET                -              sc520       eNET:SYS_TEXT_BASE=0x19000000
+
 # Target                     ARCH        CPU         Board name          Vendor	        SoC         Options
 ########################################################################################################################
+# Lenovo - LENOVO_G8296.
+LENOVO_G8296                 powerpc     mpc85xx     lenovo_g8296      	 lenovo	-          lenovo_g8296:LENOVO_G8296,ONIE,ONIE_PLATFORM_REV=0,36BIT
diff --git a/drivers/net/fm/fm.c b/drivers/net/fm/fm.c
index 49c74c2..8085a7b 100644
--- a/drivers/net/fm/fm.c
+++ b/drivers/net/fm/fm.c
@@ -410,6 +410,9 @@ int fm_init_common(int index, struct ccsr_fman *reg)
 	}
 #elif defined(CONFIG_SYS_QE_FMAN_FW_IN_REMOTE)
 	void *addr = (void *)CONFIG_SYS_QE_FMAN_FW_ADDR;
+#elif defined(CONFIG_SYS_QE_FMAN_FW_IN_MEM)
+        extern unsigned char ucode_array[];
+        void *addr = ucode_array;
 #endif
 
 	/* Upload the Fman microcode if it's present */
diff --git a/drivers/net/fm/p4080.c b/drivers/net/fm/p4080.c
index b04fd0f..ff54993 100644
--- a/drivers/net/fm/p4080.c
+++ b/drivers/net/fm/p4080.c
@@ -78,10 +78,12 @@ phy_interface_t fman_port_enet_if(enum fm_port port)
 		FSL_CORENET_RCWSR11_EC2_FM1_DTSEC2))
 		return PHY_INTERFACE_MODE_RGMII;
 
+#if !defined(CONFIG_LENOVO_G8296) /*our old RCW didn't account for this....so remove it*/
 	if ((port == FM2_DTSEC1) && ((rcwsr11 & FSL_CORENET_RCWSR11_EC2) ==
 		FSL_CORENET_RCWSR11_EC2_FM2_DTSEC1))
 		return PHY_INTERFACE_MODE_RGMII;
 
+#endif
 	switch (port) {
 	case FM1_DTSEC1:
 	case FM1_DTSEC2:
diff --git a/drivers/net/phy/marvell.c b/drivers/net/phy/marvell.c
index 4b27198..eaaf8bc 100644
--- a/drivers/net/phy/marvell.c
+++ b/drivers/net/phy/marvell.c
@@ -226,6 +226,14 @@ static int m88e1111s_config(struct phy_device *phydev)
 
 		phy_write(phydev, MDIO_DEVAD_NONE,
 			MIIM_88E1111_PHY_EXT_SR, reg);
+#if defined(CONFIG_LENOVO_G8296)
+                /*Setup PHY correctly for board */
+                phy_write(phydev, MDIO_DEVAD_NONE, 29, 0x3); //Set to page 3 for reg 30
+                phy_write(phydev, MDIO_DEVAD_NONE, 30, 0x5f5f); //Set PMOS and NMOS
+                phy_write(phydev, MDIO_DEVAD_NONE, 30, 0x5f7f); //Set PMOS and NMOS
+                phy_write(phydev, MDIO_DEVAD_NONE, 16, 0x68); //Set Auto MDIX and always power up
+                phy_write(phydev, MDIO_DEVAD_NONE, 24, 0x4149); //Set LED control
+#endif
 	}
 
 	if (phydev->interface == PHY_INTERFACE_MODE_RTBI) {
diff --git a/drivers/pci/fsl_pci_init.c b/drivers/pci/fsl_pci_init.c
index 77ac1f7..ebd9e66 100644
--- a/drivers/pci/fsl_pci_init.c
+++ b/drivers/pci/fsl_pci_init.c
@@ -211,7 +211,7 @@ static int fsl_pci_setup_inbound_windows(struct pci_controller *hose,
 	return 1;
 }
 
-#ifdef CONFIG_SYS_FSL_SRIO_PCIE_BOOT_MASTER
+#if defined(CONFIG_SYS_FSL_SRIO_PCIE_BOOT_MASTER) && defined(CONFIG_SRIO_PCIE_BOOT_IMAGE_MEM_PHYS)
 static void fsl_pcie_boot_master(pit_t *pi)
 {
 	/* configure inbound window for slave's u-boot image */
@@ -388,7 +388,7 @@ void fsl_pci_init(struct pci_controller *hose, struct fsl_pci_info *pci_info)
 	/* see if we are a PCIe or PCI controller */
 	pci_hose_read_config_byte(hose, dev, FSL_PCIE_CAP_ID, &pcie_cap);
 
-#ifdef CONFIG_SYS_FSL_SRIO_PCIE_BOOT_MASTER
+#if defined(CONFIG_SYS_FSL_SRIO_PCIE_BOOT_MASTER) && defined(CONFIG_SRIO_PCIE_BOOT_IMAGE_MEM_PHYS)
 	/* boot from PCIE --master */
 	char *s = getenv("bootmaster");
 	char pcie[6];
@@ -624,7 +624,7 @@ int fsl_pci_init_port(struct fsl_pci_info *pci_info,
 	if (fsl_is_pci_agent(hose)) {
 		fsl_pci_config_unlock(hose);
 		hose->last_busno = hose->first_busno;
-#ifdef CONFIG_SYS_FSL_SRIO_PCIE_BOOT_MASTER
+#if defined(CONFIG_SYS_FSL_SRIO_PCIE_BOOT_MASTER) && defined(CONFIG_SRIO_PCIE_BOOT_IMAGE_MEM_PHYS)
 	} else {
 		/* boot from PCIE --master releases slave's core 0 */
 		char *s = getenv("bootmaster");
diff --git a/include/configs/lenovo_g8296.h b/include/configs/lenovo_g8296.h
new file mode 100644
index 0000000..cffdcbd
--- /dev/null
+++ b/include/configs/lenovo_g8296.h
@@ -0,0 +1,675 @@
+/*
+ * Copyright 2015 Lenovo
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * Version 2 as published by the Free Software Foundation.
+ */
+
+/*
+ * Lenovo G8296 configuration file
+ */
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/* High Level Configuration Options */
+#define CONFIG_PHYS_64BIT
+#define CONFIG_BOOKE			/* BOOKE */
+#define CONFIG_E500			/* BOOKE e500 family */
+#define CONFIG_E500MC			/* BOOKE e500mc family */
+#define CONFIG_SYS_BOOK3E_HV		/* Category E.HV supported */
+#define CONFIG_MPC85xx			/* MPC85xx/PQ3 platform */
+#define CONFIG_FSL_CORENET		/* Freescale CoreNet platform */
+#define CONFIG_PPC_P4080		/* P4040 support is under P4080 flag*/
+#define CONFIG_MP			/* support multiple processors */
+#define CONFIG_NUM_CPUS		4	/* Number of CPUs in the system */
+#define CONFIG_BOARDNAME "Lenovo-G8296"
+
+#define CONFIG_BLADE            1
+#define CONFIG_SYS_P4080_ERRATUM_CPU5
+#define CONFIG_SYS_P4080_ERRATUM_CPU20
+#define CONFIG_SYS_P4080_ERRATUM_CPC2
+#define CONFIG_SYS_P4080_ERRATUM_CPC5
+#define CONFIG_SYS_P4080_ERRATUM_CPC6
+#define CONFIG_SYS_P4080_ERRATUM_DDR1
+#define CONFIG_SYS_P4080_ERRATUM_GU1
+#define CONFIG_SYS_P4080_ERRATUM_SERDES2
+#define CONFIG_SYS_P4080_ERRATUM_SERDES3
+#define CONFIG_SYS_P4080_ERRATUM_SERDES4
+#define CONFIG_SYS_P4080_ERRATUM_SERDES5
+#define CONFIG_SYS_P4080_ERRATUM_SERDES6
+#define CONFIG_SYS_P4080_ERRATUM_XAUI4
+#define CONFIG_SYS_P4080_ERRATUM_USB14
+#define CONFIG_SYS_P4080_ERRATUM_SERDES8
+
+#ifndef CONFIG_SYS_TEXT_BASE
+#define CONFIG_SYS_TEXT_BASE    0xeff80000
+#endif
+#ifndef CONFIG_RESET_VECTOR_ADDRESS
+#define CONFIG_RESET_VECTOR_ADDRESS	0xeffffffc
+#endif
+#ifndef CONFIG_SYS_MONITOR_BASE
+#define CONFIG_SYS_MONITOR_BASE	CONFIG_SYS_TEXT_BASE	/* start of monitor */
+#endif
+
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_DCSRBAR              0xf0000000
+#define CONFIG_SYS_DCSRBAR_PHYS         0xf00000000ull
+#endif
+
+
+#define CONFIG_FSL_ELBC			/* Has Enhanced localbus controller */
+#undef CONFIG_RIO			/* RIO/PCI2 are mutually exclusive */
+#define CONFIG_PCI			/* Enable PCI/PCIE */
+#define CONFIG_PCIE1			/* PCIE controler 1 (slot 1) */
+#undef  CONFIG_PCIE2			/* PCIE controler 2 (slot 2) */
+#ifdef CONFIG_MDA_TESTCARD
+#define  CONFIG_PCIE3			/* PCIE controler 3 (ULI bridge) */
+#else
+#undef  CONFIG_PCIE3			/* PCIE controler 3 (ULI bridge) */
+#endif
+#define CONFIG_FSL_PCI_INIT		/* Use common FSL init code */
+#define CONFIG_PCI_INDIRECT_BRIDGE
+#define CONFIG_FSL_PCIE_RESET		/* need PCIe reset errata */
+#define CONFIG_SYS_PCI_64BIT		/* enable 64-bit PCI resources */
+
+#define CONFIG_FSL_LAW			/* Use common FSL init code */
+
+#define CONFIG_ENV_OVERWRITE
+
+#define CONFIG_RCW_PREAMBLE 0xaa55aa55
+
+/*
+ * When initializing flash, if we cannot find the manufacturer ID,
+ * assume this is the AMD flash associated with the CDS board.
+ * This allows booting from a promjet.
+ */
+#define CONFIG_ASSUME_AMD_FLASH
+
+#define CONFIG_SYS_CLK_FREQ     (100*1000*1000)
+#define RCW_DDR_FREQ            (1300*1000*1000)
+
+/*
+ * These can be toggled for performance analysis, otherwise use default.
+ */
+#define CONFIG_SYS_CACHE_STASHING
+#define CONFIG_BACKSIDE_L2_CACHE
+#define CONFIG_L3_CACHE
+#define CONFIG_SYS_L3_0_ADDR		(CONFIG_SYS_CCSRBAR + 0x10000)
+#define CONFIG_SYS_L3_1_ADDR		(CONFIG_SYS_CCSRBAR + 0x11000)
+#define CONFIG_SYS_NR_L3		2
+#define CONFIG_SYS_INIT_L2CSR0		L2CSR0_L2E
+#define CONFIG_BTB			/* toggle branch predition */
+#define CONFIG_ADDR_STREAMING		/* toggle addr streaming */
+#define CONFIG_DDR_ECC
+#ifdef CONFIG_DDR_ECC
+#define CONFIG_ECC_INIT_VIA_DDRCONTROLLER
+#define CONFIG_MEM_INIT_VALUE		0xdeadbeef
+#endif
+#define CONFIG_SYS_DDR_DATA_INIT	0xdeadbeef
+
+#define CONFIG_ENABLE_36BIT_PHYS
+
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_ADDR_MAP
+#define CONFIG_SYS_NUM_ADDR_MAP		64	/* number of TLB1 entries */
+#endif
+
+#define	CONFIG_SYS_DRAM_TEST			/* memory test, takes time */
+
+#define CONFIG_POST CONFIG_SYS_POST_MEMORY
+
+#define CONFIG_SYS_MEMTEST_START	0x00200000	/* memtest works on */
+#define CONFIG_SYS_MEMTEST_END		0x00400000
+#define CONFIG_SYS_ALT_MEMTEST
+#define CONFIG_PANIC_HANG	/* do not reset board on panic */
+
+/*
+ * Base addresses -- Note these are effective addresses where the
+ * actual resources get mapped (not physical addresses)
+ */
+#if 0
+#define CONFIG_SYS_CCSRBAR_DEFAULT	0xfe000000	*//* CCSRBAR Default */
+#define CONFIG_SYS_CCSRBAR		0xfe000000	/* relocated CCSRBAR */
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_CCSRBAR_PHYS		0xffe000000ull	/* physical addr of CCSRBAR */
+#else
+#define CONFIG_SYS_CCSRBAR_PHYS	CONFIG_SYS_CCSRBAR	/* physical addr of CCSRBAR */
+#endif
+#endif
+#define CONFIG_SYS_IMMR		CONFIG_SYS_CCSRBAR	/* PQII uses CONFIG_SYS_IMMR */
+
+#if 0
+#define CONFIG_SYS_PCIE1_ADDR		(CONFIG_SYS_CCSRBAR+0x200000)
+#define CONFIG_SYS_PCIE2_ADDR		(CONFIG_SYS_CCSRBAR+0x201000)
+#define CONFIG_SYS_PCIE3_ADDR		(CONFIG_SYS_CCSRBAR+0x202000)
+#endif
+/*
+ * DDR Setup
+ */
+/*#define CONFIG_SYS_DDR_TLB_START 8*/
+
+#define CONFIG_VERY_BIG_RAM
+#define CONFIG_SYS_DDR_SDRAM_BASE	0x00000000	/* DDR is system memory*/
+#define CONFIG_SYS_SDRAM_BASE		CONFIG_SYS_DDR_SDRAM_BASE
+
+#define CONFIG_NUM_DDR_CONTROLLERS	2
+#define CONFIG_DIMM_SLOTS_PER_CTLR	1
+#define CONFIG_CHIP_SELECTS_PER_CTRL	(1 * CONFIG_DIMM_SLOTS_PER_CTLR)
+
+#undef CONFIG_DDR_SPD
+#define CONFIG_FSL_DDR3
+
+#define CONFIG_SYS_SDRAM_SIZE	        4096
+#define CONFIG_SYS_DDR_SIZE             CONFIG_SYS_SDRAM_SIZE
+
+/*
+ * Local Bus Definitions
+ */
+#define CONFIG_SYS_FLASH_BASE		0xee000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_FLASH_BASE_PHYS	0xfee000000ull
+#else
+#define CONFIG_SYS_FLASH_BASE_PHYS	CONFIG_SYS_FLASH_BASE
+#endif
+
+#define CONFIG_SYS_NAND_BASE            0xe0000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_NAND_BASE_PHYS       0xf00000000ull
+#else
+#define CONFIG_SYS_NAND_BASE_PHYS       CONFIG_SYS_NAND_BASE
+#endif
+#define CONFIG_SYS_NAND_BASE_LIST     { CONFIG_SYS_NAND_BASE,\
+                                CONFIG_SYS_NAND_BASE + 0x40000}
+
+
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_FLASH_CFI_MTD
+#define CONFIG_RBTREE
+#define CONFIG_LZO
+
+#define MTDIDS_DEFAULT      "nand0=nand0,nand1=nand1"
+#define MTDPARTS_DEFAULT   "mtdparts=nand0:0x3c000000(user),-(res)"
+
+#define CONFIG_SYS_MAX_NAND_DEVICE      2
+/*#define CONFIG_MTD_NAND_VERIFY_WRITE*/
+#define CONFIG_CMD_NAND         1
+#define CONFIG_NAND_FSL_ELBC    1
+#define CONFIG_SYS_NAND_BLOCK_SIZE      (128 * 1024)
+
+#define CONFIG_NAND_BR_PRELIM \
+                (BR_PHYS_ADDR(CONFIG_SYS_NAND_BASE_PHYS) \
+                | (2<<BR_DECC_SHIFT)    /* Use HW ECC */ \
+                | BR_PS_8               /* Port Size = 8 bit */ \
+                | BR_MS_FCM             /* MSEL = FCM */ \
+                | BR_V)                 /* valid */
+#define CONFIG_NAND_OR_PRELIM   (0xFFFE0000     /* length 256K */ \
+                | OR_FCM_PGS            /* Large Page*/ \
+                | OR_FCM_CSCT \
+                | OR_FCM_CST \
+                | OR_FCM_CHT \
+                | OR_FCM_SCY_1 \
+                | OR_FCM_TRLX \
+                | OR_FCM_EHTR)
+#define CONFIG_SYS_BR1_PRELIM  CONFIG_NAND_BR_PRELIM    /* NAND Base Address */
+#define CONFIG_SYS_OR1_PRELIM  CONFIG_NAND_OR_PRELIM    /* NAND Options */
+
+#define CONFIG_SYS_BRX_PRELIM \
+                (BR_PHYS_ADDR((CONFIG_SYS_NAND_BASE_PHYS + 0x40000)) \
+                | (2<<BR_DECC_SHIFT)    /* Use HW ECC */ \
+                | BR_PS_8               /* Port Size = 8 bit */ \
+                | BR_MS_FCM             /* MSEL = FCM */ \
+                | BR_V)                 /* valid */
+#define CONFIG_SYS_ORX_PRELIM   CONFIG_NAND_OR_PRELIM   /* NAND Options */
+
+#define CONFIG_SYS_CPLD_BASE  0xe8000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_CPLD_BASE_PHYS       0xfe8000000ull
+#else
+#define CONFIG_SYS_CPLD_BASE_PHYS       CONFIG_SYS_CPLD_BASE
+#endif
+
+#define CONFIG_SYS_BR0_PRELIM  (BR_PHYS_ADDR((CONFIG_SYS_FLASH_BASE_PHYS)) | BR_PS_16 | BR_V)
+#define CONFIG_SYS_OR0_PRELIM	0xfe001665
+
+#define CONFIG_SYS_BR5_PRELIM  (BR_PHYS_ADDR(CONFIG_SYS_CPLD_BASE_PHYS) | BR_PS_8 | BR_V)
+#define CONFIG_SYS_OR5_PRELIM  0xffff9665
+#define CPLD_RESET_REG  (CONFIG_SYS_CPLD_BASE + 0xC)
+
+#define CONFIG_SYS_FLASH_QUIET_TEST
+#define CONFIG_FLASH_SHOW_PROGRESS 	45 /* count down from 45/5: 9..1 */
+
+#define CONFIG_SYS_MAX_FLASH_BANKS      1       /* number of banks */
+#define CONFIG_SYS_MAX_FLASH_SECT       256    /* sectors per device */
+#define CONFIG_SYS_FLASH_SECT_SIZE     0x20000 /* 256k bytes per sector */
+#define CONFIG_SYS_FLASH_SECT_OFFSET_MASK (CONFIG_SYS_FLASH_SECT_SIZE-1)
+#define CONFIG_SYS_FLASH_SECT_MASK (~CONFIG_SYS_FLASH_SECT_OFFSET_MASK)
+
+#undef	CONFIG_SYS_FLASH_CHECKSUM
+#define CONFIG_SYS_FLASH_ERASE_TOUT	60000		/* Flash Erase Timeout (ms) */
+#define CONFIG_SYS_FLASH_WRITE_TOUT	500		/* Flash Write Timeout (ms) */
+
+#define CONFIG_SYS_MONITOR_BASE         CONFIG_SYS_TEXT_BASE    /* start of monitor */
+/*#define CONFIG_SYS_MONITOR_BASE		TEXT_BASE	*//* start of monitor */
+
+#define CONFIG_FLASH_CFI_DRIVER
+#define CONFIG_SYS_FLASH_CFI
+#define CONFIG_SYS_FLASH_EMPTY_INFO
+#define CONFIG_SYS_FLASH_AMD_CHECK_DQ7
+#define CONFIG_SYS_FLASH_BANKS_LIST	{CONFIG_SYS_FLASH_BASE_PHYS}
+
+#define CONFIG_BOARD_EARLY_INIT_F
+#define CONFIG_BOARD_EARLY_INIT_R	/* call board_early_init_r function */
+
+/* define to use L1 as initial stack */
+#define CONFIG_L1_INIT_RAM
+#define CONFIG_SYS_INIT_RAM_LOCK
+#define CONFIG_SYS_INIT_RAM_ADDR	0xfdd00000	/* Initial L1 address */
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_INIT_RAM_ADDR_PHYS_HIGH 0xf
+#define CONFIG_SYS_INIT_RAM_ADDR_PHYS_LOW CONFIG_SYS_INIT_RAM_ADDR
+/* The assembler doesn't like typecast */
+#define CONFIG_SYS_INIT_RAM_ADDR_PHYS \
+	((CONFIG_SYS_INIT_RAM_ADDR_PHYS_HIGH * 1ull << 32) | \
+	  CONFIG_SYS_INIT_RAM_ADDR_PHYS_LOW)
+#else
+/* Initial L1 address */
+#define CONFIG_SYS_INIT_RAM_ADDR_PHYS	CONFIG_SYS_INIT_RAM_ADDR
+#define CONFIG_SYS_INIT_RAM_ADDR_PHYS_HIGH 0
+#define CONFIG_SYS_INIT_RAM_ADDR_PHYS_LOW CONFIG_SYS_INIT_RAM_ADDR_PHYS
+#endif
+/* Size of used area in RAM */
+#define CONFIG_SYS_INIT_RAM_SIZE	0x00004000
+/*#define CONFIG_SYS_INIT_RAM_END		0x00004000	*//* End of used area in RAM */
+
+/*#define CONFIG_SYS_GBL_DATA_SIZE	128*/	/* num bytes initial data */
+#define CONFIG_SYS_GBL_DATA_OFFSET	(CONFIG_SYS_INIT_RAM_SIZE - \
+					GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_OFFSET	CONFIG_SYS_GBL_DATA_OFFSET
+
+#define CONFIG_SYS_MONITOR_LEN		(512 * 1024)
+#define CONFIG_SYS_MALLOC_LEN		(32 * 1024 * 1024)	/* Reserved for malloc */
+
+#define CONFIG_CONS_INDEX	1
+#undef	CONFIG_SERIAL_SOFTWARE_FIFO
+#define CONFIG_SYS_NS16550
+#define CONFIG_SYS_NS16550_SERIAL
+#define CONFIG_SYS_NS16550_REG_SIZE	1
+#define CONFIG_SYS_NS16550_CLK		(get_bus_freq(0)/2)
+
+#define CONFIG_SYS_BAUDRATE_TABLE	\
+	{300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 115200}
+
+#define CONFIG_SYS_NS16550_COM1	(CONFIG_SYS_CCSRBAR+0x11C500)
+#define CONFIG_SYS_NS16550_COM2	(CONFIG_SYS_CCSRBAR+0x11C600)
+#define CONFIG_SYS_NS16550_COM3	(CONFIG_SYS_CCSRBAR+0x11D500)
+#define CONFIG_SYS_NS16550_COM4	(CONFIG_SYS_CCSRBAR+0x11D600)
+
+/* Use the HUSH parser */
+#define CONFIG_SYS_HUSH_PARSER
+#ifdef	CONFIG_SYS_HUSH_PARSER
+#define CONFIG_SYS_PROMPT_HUSH_PS2 "> "
+#endif
+
+/* pass open firmware flat tree */
+#define CONFIG_OF_LIBFDT
+#define CONFIG_OF_BOARD_SETUP
+#define CONFIG_OF_STDOUT_VIA_ALIAS
+
+#define CONFIG_SYS_64BIT_VSPRINTF
+#define CONFIG_SYS_64BIT_STRTOUL
+
+/* new uImage format support */
+#define CONFIG_FIT
+#define CONFIG_FIT_VERBOSE	/* enable fit_format_{error,warning}() */
+
+/* I2C */
+#define CONFIG_FSL_I2C                 /* Use FSL common I2C driver */
+#define CONFIG_HARD_I2C			/* I2C with hardware support */
+#undef CONFIG_SOFT_I2C			/* I2C bit-banged */
+#define CONFIG_I2C_MULTI_BUS
+#define CONFIG_I2C_CMD_TREE
+#define CONFIG_SYS_I2C_OFFSET	0x118000
+#define CONFIG_SYS_I2C_SPEED	100000
+#define CONFIG_SYS_I2C_SLAVE	0x7F
+#define CONFIG_SYS_I2C2_OFFSET	0x118100
+#define CONFIG_SYS_I2C2_SPEED	100000
+#define CONFIG_SYS_I2C2_SLAVE	0x7F
+#define CONFIG_SYS_I2C3_OFFSET	0x119000
+#define CONFIG_SYS_I2C3_SPEED	100000
+#define CONFIG_SYS_I2C3_SLAVE	0x7F
+#define CONFIG_SYS_I2C_MUX              0x71
+
+/* EEPROM */
+/* enable read and write access to EEPROM */
+#define CONFIG_CMD_EEPROM
+#define CONFIG_SYS_I2C_MULTI_EEPROMS
+#define CONFIG_SYS_EEPROM_BUS_NUM	0
+#define CONFIG_SYS_EEPROM_MAX_SIZE 2048
+
+#define CONFIG_SYS_EEPROM_USE_COMMON_I2C_IO
+#define CONFIG_SYS_I2C_EEPROM_ADDR  	0x52
+#define CONFIG_SYS_I2C_EEPROM_ADDR_LEN 2
+#define CONFIG_SYS_EEPROM_PAGE_WRITE_BITS 3
+#define CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS 5
+
+/* Assign Some board specific I2C information here */
+#define CONFIG_SYS_I2C_EEPROM_MUX_ADDR     0x71
+#define CONFIG_SYS_I2C_EEPROM_MUX_CTRL     0
+#define CONFIG_SYS_I2C_EEPROM_MUX_CHAN     0
+/*ONIE reservered space in VPD is at offset 0x300*/
+#define CONFIG_SYS_EEPROM_OFFSET           0x300
+
+/* Configurations for ONIE TLV infomation stored in EEPROM */
+#define CONFIG_CMD_SYS_EEPROM
+/* Populate serial number and mac address from EEPROM */
+#define CONFIG_POPULATE_SERIAL_NUMBER
+#define CONFIG_SYS_EEPROM_LOAD_ENV_MAC
+#define CONFIG_SYS_EEPROM_MAX_NUM_ETH_PORTS	1
+
+/*
+ * General PCI
+ * Memory space is mapped 1-1, but I/O space must start from 0.
+ */
+
+#if defined(CONFIG_PCIE1)
+/* controller 1, direct to uli, tgtid 3, Base address 20000 */
+#define CONFIG_SYS_PCIE1_NAME		"PCIe1"
+#define CONFIG_SYS_PCIE1_MEM_VIRT	0x80000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_PCIE1_MEM_BUS	0xe0000000
+#define CONFIG_SYS_PCIE1_MEM_PHYS	0xc00000000ull
+#else
+#define CONFIG_SYS_PCIE1_MEM_BUS	0x80000000
+#define CONFIG_SYS_PCIE1_MEM_PHYS	0x80000000
+#endif
+#define CONFIG_SYS_PCIE1_MEM_SIZE	0x20000000	/* 512M */
+#define CONFIG_SYS_PCIE1_IO_VIRT	0xf8000000
+#define CONFIG_SYS_PCIE1_IO_BUS		0x00000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_PCIE1_IO_PHYS	0xff8000000ull
+#else
+#define CONFIG_SYS_PCIE1_IO_PHYS	0xf8000000
+#endif
+#define CONFIG_SYS_PCIE1_IO_SIZE	0x00010000	/* 64k */
+#endif
+
+#if defined(CONFIG_PCIE2)
+/* controller 2, Slot 2, tgtid 2, Base address 201000 */
+#define CONFIG_SYS_PCIE2_NAME		"PCIe2"
+#define CONFIG_SYS_PCIE2_MEM_VIRT	0xa0000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_PCIE2_MEM_BUS	0xe0000000
+#define CONFIG_SYS_PCIE2_MEM_PHYS	0xc20000000ull
+#else
+#define CONFIG_SYS_PCIE2_MEM_BUS	0xa0000000
+#define CONFIG_SYS_PCIE2_MEM_PHYS	0xa0000000
+#endif
+#define CONFIG_SYS_PCIE2_MEM_SIZE	0x20000000	/* 512M */
+#define CONFIG_SYS_PCIE2_IO_VIRT	0xf8010000
+#define CONFIG_SYS_PCIE2_IO_BUS		0x00000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_PCIE2_IO_PHYS	0xff8010000ull
+#else
+#define CONFIG_SYS_PCIE2_IO_PHYS	0xf8010000
+#endif
+#define CONFIG_SYS_PCIE2_IO_SIZE	0x00010000	/* 64k */
+#endif
+
+#if defined(CONFIG_PCIE3)
+/* controller 3, Slot 1, tgtid 1, Base address 202000 */
+/*#define CONFIG_SYS_PCIE3_NAME		"PCIe3"*/
+#define CONFIG_SYS_PCIE3_MEM_VIRT	0xe0000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_PCIE3_MEM_BUS	0xe0000000
+#define CONFIG_SYS_PCIE3_MEM_PHYS	0xc40000000ull
+#else
+#define CONFIG_SYS_PCIE3_MEM_BUS	0xc0000000
+#define CONFIG_SYS_PCIE3_MEM_PHYS	0xc0000000
+#endif
+#define CONFIG_SYS_PCIE3_MEM_SIZE	0x20000000	/* 512M */
+#define CONFIG_SYS_PCIE3_IO_VIRT	0xf8020000
+#define CONFIG_SYS_PCIE3_IO_BUS		0x00000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_PCIE3_IO_PHYS	0xff8020000ull
+#else
+#define CONFIG_SYS_PCIE3_IO_PHYS	0xf8020000
+#endif
+#define CONFIG_SYS_PCIE3_IO_SIZE	0x00010000	/* 64k */
+#endif
+
+#define CONFIG_SYS_DPAA_QBMAN           /* Support Q/Bman */
+#define CONFIG_SYS_BMAN_NUM_PORTALS     10
+#define CONFIG_SYS_BMAN_MEM_BASE        0xf4000000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_BMAN_MEM_PHYS        0xff4000000ull
+#else
+#define CONFIG_SYS_BMAN_MEM_PHYS        CONFIG_SYS_BMAN_MEM_BASE
+#endif
+#define CONFIG_SYS_BMAN_MEM_SIZE        0x00200000
+#define CONFIG_SYS_QMAN_NUM_PORTALS     10
+#define CONFIG_SYS_QMAN_MEM_BASE        0xf4200000
+#ifdef CONFIG_PHYS_64BIT
+#define CONFIG_SYS_QMAN_MEM_PHYS        0xff4200000ull
+#else
+#define CONFIG_SYS_QMAN_MEM_PHYS        CONFIG_SYS_QMAN_MEM_BASE
+#endif
+#define CONFIG_SYS_QMAN_MEM_SIZE        0x00200000
+
+
+#define CONFIG_SYS_DPAA_FMAN
+#define CONFIG_SYS_NUM_FMAN		2
+#define CONFIG_SYS_DPAA_PME
+
+#ifdef CONFIG_SYS_DPAA_FMAN
+#define CONFIG_FMAN_ENET
+#if 0
+#define CONFIG_SYS_QE_FMAN_FW_IN_NOR
+#define CONFIG_SYS_FMAN_FW_ADDR         0xEE040000
+#endif
+#define CONFIG_SYS_QE_FMAN_FW_IN_MEM
+#define CONFIG_SYS_QE_FMAN_FW_LENGTH    0x10000
+#define CONFIG_SYS_FDT_PAD              (0x3000 + CONFIG_SYS_QE_FMAN_FW_LENGTH)
+#endif
+
+#ifdef CONFIG_PCI
+
+#undef CONFIG_VIDEO
+
+#define CONFIG_NET_MULTI
+#define CONFIG_PCI_PNP			/* do pci plug-and-play */
+
+#ifndef CONFIG_PCI_PNP
+#define PCI_ENET0_IOADDR		CONFIG_SYS_PCI1_IO_BUS
+#define PCI_ENET0_MEMADDR		CONFIG_SYS_PCI1_IO_BUS
+#define PCI_IDSEL_NUMBER		0x11	/* IDSEL = AD11 */
+#endif
+
+#define CONFIG_PCI_SCAN_SHOW		/* show pci devices on startup */
+#define CONFIG_DOS_PARTITION
+#endif	/* CONFIG_PCI */
+
+#ifdef CONFIG_FMAN_ENET
+#define CONFIG_FM1_ETH0
+#define CONFIG_SYS_FM1_ETH0_PHY_ADDR    0x00
+#define CONFIG_SYS_FM1_DTSEC1_PHY_ADDR  0x00
+#define CONFIG_SYS_FM1_ETH0_MODE        NO_OP
+
+#define CONFIG_FM2_ETH0
+#define CONFIG_SYS_FM2_ETH0_PHY_ADDR    0x00
+#define CONFIG_SYS_FM2_DTSEC1_PHY_ADDR  0x00
+#define CONFIG_SYS_FM2_ETH0_MODE        SGMII
+
+#ifdef CONFIG_MDA_TESTCARD
+#define CONFIG_FM2_ETH1
+#define CONFIG_SYS_FM2_ETH1_PHY_ADDR    9
+#define CONFIG_SYS_FM2_DTSEC2_PHY_ADDR  0x09
+#define CONFIG_SYS_FM2_ETH1_MODE        SGMII
+#endif
+
+#define CONFIG_HAS_ETH0
+#define CONFIG_ETHADDR  00:04:9F:02:00:FD
+#ifdef CONFIG_MDA_TESTCARD
+#define CONFIG_HAS_ETH1
+#define CONFIG_ETH1ADDR 00:04:9F:02:01:FD
+#endif
+
+#define CONFIG_SYS_TBIPA_VALUE	9
+#define  CONFIG_MII		/* MII PHY management */
+#define CONFIG_ETHPRIME		"FM2@DTSEC0"
+#define CONFIG_PHY_GIGE		/* Include GbE speed/duplex detection */
+#endif
+#define CONFIG_PHY_MARVELL
+/*
+ * Environment
+ */
+#define CONFIG_ENV_IS_IN_FLASH
+#if CONFIG_SYS_MONITOR_BASE > 0xfff80000
+#define CONFIG_ENV_ADDR		0xfff80000
+#else
+#define CONFIG_ENV_ADDR		(CONFIG_SYS_MONITOR_BASE - CONFIG_ENV_SECT_SIZE)
+#endif
+/*
+#define CONFIG_ENV_SIZE		0x1000
+*/
+#define CONFIG_ENV_SECT_SIZE	0x20000 /* 128K (one sector) */
+
+#define CONFIG_LOADS_ECHO		/* echo on for serial download */
+#define CONFIG_SYS_LOADS_BAUD_CHANGE	/* allow baudrate change */
+
+/*
+ * Command line configuration.
+ */
+#include <config_cmd_default.h>
+
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_I2C
+#define CONFIG_CMD_MII
+#define CONFIG_CMD_ELF
+#define CONFIG_CMD_IRQ
+#define CONFIG_CMD_SETEXPR
+
+#ifdef CONFIG_PCI
+#define CONFIG_CMD_PCI
+#define CONFIG_CMD_NET
+#endif
+
+/*
+* USB
+*/
+#undef CONFIG_CMD_USB
+#undef CONFIG_USB_STORAGE
+#undef CONFIG_USB_EHCI
+#undef CONFIG_USB_EHCI_FSL
+#define CONFIG_EHCI_HCD_INIT_AFTER_RESET
+#undef CONFIG_CMD_EXT2
+
+/*
+ * Miscellaneous configurable options
+ */
+#define CONFIG_SYS_LONGHELP			/* undef to save memory	*/
+#define CONFIG_CMDLINE_EDITING		/* Command-line editing */
+#define CONFIG_SYS_LOAD_ADDR	0x2000000	/* default load address */
+#define CONFIG_SYS_PROMPT	"=> "		/* Monitor Command Prompt */
+#if 0
+#ifdef CONFIG_CMD_KGDB
+#define CONFIG_SYS_CBSIZE	1024		/* Console I/O Buffer Size */
+#else
+#define CONFIG_SYS_CBSIZE	256		/* Console I/O Buffer Size */
+#endif
+#endif
+#define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE+sizeof(CONFIG_SYS_PROMPT)+16) /* Print Buffer Size */
+#define CONFIG_SYS_MAXARGS	16		/* max number of command args */
+#define CONFIG_SYS_BARGSIZE	CONFIG_SYS_CBSIZE	/* Boot Argument Buffer Size */
+#define CONFIG_SYS_HZ		1000		/* decrementer freq: 1ms ticks */
+
+/*
+ * For booting Linux, the board info and command line data
+ * have to be in the first 16 MB of memory, since this is
+ * the maximum mapped by the Linux kernel during initialization.
+ */
+#if 0
+#define CONFIG_SYS_BOOTMAPSZ	(16 << 20)	/* Initial Memory map for Linux*/
+#endif
+#define CONFIG_SYS_BOOTM_LEN (64 << 20)
+
+/*
+ * Internal Definitions
+ *
+ * Boot Flags
+ */
+#define BOOTFLAG_COLD	0x01		/* Normal Power-On: Boot from FLASH */
+#define BOOTFLAG_WARM	0x02		/* Software reboot */
+
+#ifdef CONFIG_CMD_KGDB
+#define CONFIG_KGDB_BAUDRATE	230400	/* speed to run kgdb serial port */
+#define CONFIG_KGDB_SER_INDEX	2	/* which serial port to use */
+#endif
+
+/*
+ * Environment Configuration
+ */
+
+#define CONFIG_HOSTNAME Lenovo-g8296-unknown
+#define CONFIG_LOADADDR         4000000 /* default location for tftp and bootm */
+#define CONFIG_BOOTDELAY        10       /* -1 disables auto-boot */
+#define CONFIG_BOOTARGS        /* the boot command will set bootargs */
+#define CONFIG_BAUDRATE         115200
+#define CONFIG_SERIAL_DOWNLOAD_BAUDRATE   115200 /*For xmodem download*/
+#define CONFIG_MENUPROMPT " "
+
+#define CONFIG_EXTRA_ENV_SETTINGS                                       \
+   "netdev=eth0\0"                                                      \
+   "consoledev=ttyS0\0"                                                 \
+   "bootargs=root=/dev/ram rw quiet\0"    \
+   "ethprime=FM2@DTSEC1\0"                                              \
+   "initrd_high=no\0"
+
+#undef CONFIG_TSEC1
+#undef CONFIG_TSEC3
+#undef CONFIG_TSEC2_NAME
+#define	CONFIG_TSEC2_NAME	"eth0"
+
+#undef CONFIG_ETHPRIME
+#define CONFIG_ETHPRIME		"eth0"
+
+#undef CONFIG_HAS_ETH1
+#undef CONFIG_HAS_ETH2
+
+/* Undefine a few things provided by common_config.h */
+#undef CONFIG_BOOTCOMMAND
+#undef CONFIG_SYS_PBSIZE
+#undef CONFIG_DOS_PARTITION
+#undef CONFIG_LOADS_ECHO
+#undef CONFIG_SYS_LOADS_BAUD_CHANGE
+#undef CONFIG_SYS_PCIE1_NAME
+#undef CONFIG_SYS_PCIE2_NAME
+#undef CONFIG_OF_LIBFDT
+#undef CONFIG_OF_BOARD_SETUP
+#undef CONFIG_OF_STDOUT_VIA_ALIAS
+#undef CONFIG_FIT
+#undef CONFIG_SYS_BAUDRATE_TABLE
+#undef CONFIG_EXTRA_ENV_SETTINGS
+
+#include "configs/common_config.h"
+
+/*
+** Platform environment variables needed by the common env
+** infrastructure.
+**
+*/
+#define CONFIG_PLATFORM_ENV	\
+	"consoledev=ttyS0\0"	\
+	"onie_start=0xef560000\0"	\
+	"onie_sz.b=0x00a00000\0" \
+	"hwconfig=usb1:dr_mode=host,phy_type=ulpi\0"
+
+#define	CONFIG_EXTRA_ENV_SETTINGS		\
+	CONFIG_PLATFORM_ENV			\
+	CONFIG_ONIE_COMMON_UBOOT_ENV
+
+#endif	/* __CONFIG_H */
diff --git a/include/fsl_mdio.h b/include/fsl_mdio.h
index e24e828..9fa5771 100644
--- a/include/fsl_mdio.h
+++ b/include/fsl_mdio.h
@@ -31,8 +31,11 @@
 /* MII Management Configuration Register */
 #define MIIMCFG_RESET_MGMT          0x80000000
 #define MIIMCFG_MGMT_CLOCK_SELECT   0x00000007
+#if defined(CONFIG_LENOVO_G8296)
+#define MIIMCFG_INIT_VALUE          0x00000007 //Run clock a bit slower
+#else
 #define MIIMCFG_INIT_VALUE	    0x00000003
-
+#endif
 /* MII Management Command Register */
 #define MIIMCOM_READ_CYCLE	0x00000001
 #define MIIMCOM_SCAN_CYCLE	0x00000002
