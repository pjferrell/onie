powerpc-Use-double-word-compare-for-powerpc64.patch

In a few places, change the 32-bit compares to 64-bit compares to work
with newer binutils version 2.28.  The newer binutils is more strict.

Without this patch, compiling with newer binutils gives this:

  arch/powerpc/kernel/fsl_booke_cache.S: Assembler messages:
  arch/powerpc/kernel/fsl_booke_cache.S:283: Error: operand out of range (5 is not between 0 and 1)
  arch/powerpc/kernel/fsl_booke_cache.S:283: Error: missing operand

Copyright (C) 2017 Curt Brune <curt@cumulusnetworks.com>
SPDX-License-Identifier:     GPL-2.0

diff --git a/arch/powerpc/kernel/exceptions-64e.S b/arch/powerpc/kernel/exceptions-64e.S
index ea9c605..073cb69 100644
--- a/arch/powerpc/kernel/exceptions-64e.S
+++ b/arch/powerpc/kernel/exceptions-64e.S
@@ -1624,7 +1624,7 @@ _GLOBAL(fsl_enable_threads)
 BEGIN_FTR_SECTION
 	MFTMR(TMRN_TMCFG0, 3)
 	andi. r3,r3,0x3f
-	cmpi 0,r3,2
+	cmpdi 0,r3,2
 	blt 2f
 
 	/* Disable the other thread */
diff --git a/arch/powerpc/kernel/fsl_booke_cache.S b/arch/powerpc/kernel/fsl_booke_cache.S
index 5c4d09a..074f3b7 100644
--- a/arch/powerpc/kernel/fsl_booke_cache.S
+++ b/arch/powerpc/kernel/fsl_booke_cache.S
@@ -280,7 +280,11 @@ _GLOBAL(cluster_invalidate_enable_L2)
 
 	/* wait for the invalidate to finish */
 1:	lwz	r5, 0(r3)
+#ifdef CONFIG_PPC64
+	cmpd 	0, r5, r4
+#else
 	cmp 	0, r5, r4
+#endif
 	bne	1b
 
 	/* enable cluster L2 cache */
